{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "kind-control-plane",
                "uid": "f2514a52-aa5b-4d24-bf77-c3d49690da72",
                "resourceVersion": "409",
                "creationTimestamp": "2023-06-27T20:51:04Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "kind-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "kind://docker/kind/kind-control-plane"
            },
            "status": {
                "capacity": {
                    "cpu": "4",
                    "ephemeral-storage": "263174212Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "12602680Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "4",
                    "ephemeral-storage": "263174212Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "12602680Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-27T20:51:25Z",
                        "lastTransitionTime": "2023-06-27T20:51:03Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-27T20:51:25Z",
                        "lastTransitionTime": "2023-06-27T20:51:03Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-27T20:51:25Z",
                        "lastTransitionTime": "2023-06-27T20:51:03Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2023-06-27T20:51:25Z",
                        "lastTransitionTime": "2023-06-27T20:51:25Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "kind-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "444691e725c140be8571987ae9d126cf",
                    "systemUUID": "444691e725c140be8571987ae9d126cf",
                    "bootID": "976a519c-8f6e-484e-874f-06505b60559d",
                    "kernelVersion": "5.10.16.3-microsoft-standard-WSL2",
                    "osImage": "Debian GNU/Linux 11 (bullseye)",
                    "containerRuntimeVersion": "containerd://1.7.1",
                    "kubeletVersion": "v1.27.3",
                    "kubeProxyVersion": "v1.27.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.7-0"
                        ],
                        "sizeBytes": 101639218
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                            "registry.k8s.io/kube-apiserver:v1.27.3"
                        ],
                        "sizeBytes": 83456511
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                            "registry.k8s.io/kube-controller-manager:v1.27.3"
                        ],
                        "sizeBytes": 74420365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                            "registry.k8s.io/kube-proxy:v1.27.3"
                        ],
                        "sizeBytes": 72711677
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                            "registry.k8s.io/kube-scheduler:v1.27.3"
                        ],
                        "sizeBytes": 59801741
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20230511-dc714da8"
                        ],
                        "sizeBytes": 27731571
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20230511-dc714da8"
                        ],
                        "sizeBytes": 19351145
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 3052318
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d-2rmlv.176c9f45b8b474c4",
                "namespace": "kube-system",
                "uid": "a31ca9f2-acd6-4fb9-8450-686d6379d136",
                "resourceVersion": "384",
                "creationTimestamp": "2023-06-27T20:51:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-2rmlv",
                "uid": "e2d85a67-881a-4bf8-9067-2e63a2fb3c08",
                "apiVersion": "v1",
                "resourceVersion": "377"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-27T20:51:22Z",
            "lastTimestamp": "2023-06-27T20:51:22Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-2rmlv.176c9f4698b577d0",
                "namespace": "kube-system",
                "uid": "23c0e683-77e6-4117-9f03-66c054660598",
                "resourceVersion": "418",
                "creationTimestamp": "2023-06-27T20:51:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-2rmlv",
                "uid": "e2d85a67-881a-4bf8-9067-2e63a2fb3c08",
                "apiVersion": "v1",
                "resourceVersion": "386"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-5d78c9869d-2rmlv to kind-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-27T20:51:25Z",
            "lastTimestamp": "2023-06-27T20:51:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-2rmlv.176c9f46e2ce88ac",
                "namespace": "kube-system",
                "uid": "db85add5-b440-4443-a4b5-f5bdd3b433bc",
                "resourceVersion": "422",
                "creationTimestamp": "2023-06-27T20:51:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-2rmlv",
                "uid": "e2d85a67-881a-4bf8-9067-2e63a2fb3c08",
                "apiVersion": "v1",
                "resourceVersion": "412",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.10.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:27Z",
            "lastTimestamp": "2023-06-27T20:51:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-2rmlv.176c9f4719b69d50",
                "namespace": "kube-system",
                "uid": "4eaba79d-2f92-4c76-8e23-11d50af00bc0",
                "resourceVersion": "427",
                "creationTimestamp": "2023-06-27T20:51:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-2rmlv",
                "uid": "e2d85a67-881a-4bf8-9067-2e63a2fb3c08",
                "apiVersion": "v1",
                "resourceVersion": "412",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:28Z",
            "lastTimestamp": "2023-06-27T20:51:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-2rmlv.176c9f4727874038",
                "namespace": "kube-system",
                "uid": "0ff18c43-2e75-45a0-9171-fc2693240c07",
                "resourceVersion": "430",
                "creationTimestamp": "2023-06-27T20:51:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-2rmlv",
                "uid": "e2d85a67-881a-4bf8-9067-2e63a2fb3c08",
                "apiVersion": "v1",
                "resourceVersion": "412",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:28Z",
            "lastTimestamp": "2023-06-27T20:51:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-qzsrc.176c9f45b7b7012c",
                "namespace": "kube-system",
                "uid": "60dffa2d-6879-4ed0-9388-2df2b46c794a",
                "resourceVersion": "379",
                "creationTimestamp": "2023-06-27T20:51:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-qzsrc",
                "uid": "fc4669da-bf95-44b0-b8bd-6b2037c144d9",
                "apiVersion": "v1",
                "resourceVersion": "375"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-27T20:51:22Z",
            "lastTimestamp": "2023-06-27T20:51:22Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-qzsrc.176c9f469747ad3c",
                "namespace": "kube-system",
                "uid": "e96cf26a-90d2-4c9f-a191-3172a6876436",
                "resourceVersion": "416",
                "creationTimestamp": "2023-06-27T20:51:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-qzsrc",
                "uid": "fc4669da-bf95-44b0-b8bd-6b2037c144d9",
                "apiVersion": "v1",
                "resourceVersion": "381"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-5d78c9869d-qzsrc to kind-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-27T20:51:25Z",
            "lastTimestamp": "2023-06-27T20:51:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-qzsrc.176c9f46e26fb5ac",
                "namespace": "kube-system",
                "uid": "a8ed5ed2-728e-4e20-8dd2-fd1bcdd0b545",
                "resourceVersion": "421",
                "creationTimestamp": "2023-06-27T20:51:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-qzsrc",
                "uid": "fc4669da-bf95-44b0-b8bd-6b2037c144d9",
                "apiVersion": "v1",
                "resourceVersion": "410",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.10.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:27Z",
            "lastTimestamp": "2023-06-27T20:51:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-qzsrc.176c9f471c1a31c4",
                "namespace": "kube-system",
                "uid": "c33d876b-3fc7-4417-826b-ca6ec0256ae2",
                "resourceVersion": "428",
                "creationTimestamp": "2023-06-27T20:51:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-qzsrc",
                "uid": "fc4669da-bf95-44b0-b8bd-6b2037c144d9",
                "apiVersion": "v1",
                "resourceVersion": "410",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:28Z",
            "lastTimestamp": "2023-06-27T20:51:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-qzsrc.176c9f472829c678",
                "namespace": "kube-system",
                "uid": "badf0703-2270-4d5b-a9ab-40a18037a038",
                "resourceVersion": "431",
                "creationTimestamp": "2023-06-27T20:51:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-qzsrc",
                "uid": "fc4669da-bf95-44b0-b8bd-6b2037c144d9",
                "apiVersion": "v1",
                "resourceVersion": "410",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:28Z",
            "lastTimestamp": "2023-06-27T20:51:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d.176c9f45b79dfb50",
                "namespace": "kube-system",
                "uid": "56d77f08-aafd-488e-89a8-79752e0b4cb1",
                "resourceVersion": "378",
                "creationTimestamp": "2023-06-27T20:51:22Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d",
                "uid": "4a984443-5505-4887-9ab5-f3e5ab488e72",
                "apiVersion": "apps/v1",
                "resourceVersion": "367"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-5d78c9869d-qzsrc",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:22Z",
            "lastTimestamp": "2023-06-27T20:51:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d.176c9f45b877218c",
                "namespace": "kube-system",
                "uid": "e1bb1b0e-ddc2-44f9-81a8-73e31ce7a1ac",
                "resourceVersion": "388",
                "creationTimestamp": "2023-06-27T20:51:22Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d",
                "uid": "4a984443-5505-4887-9ab5-f3e5ab488e72",
                "apiVersion": "apps/v1",
                "resourceVersion": "367"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-5d78c9869d-2rmlv",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:22Z",
            "lastTimestamp": "2023-06-27T20:51:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.176c9f45b13cb684",
                "namespace": "kube-system",
                "uid": "9b36cbd7-216c-475a-afd1-b8856b182984",
                "resourceVersion": "369",
                "creationTimestamp": "2023-06-27T20:51:22Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "de61a6e1-ff9c-4536-91ec-cbf760f5c692",
                "apiVersion": "apps/v1",
                "resourceVersion": "237"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-5d78c9869d to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:22Z",
            "lastTimestamp": "2023-06-27T20:51:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-kind-control-plane.176c9f457d8d79a4",
                "namespace": "kube-system",
                "uid": "76ae9b80-3652-4d23-86d8-c25d6f503ca4",
                "resourceVersion": "331",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-kind-control-plane",
                "uid": "f5902cc5-7cd0-4744-aa04-ebcffcd49027",
                "apiVersion": "v1",
                "resourceVersion": "287"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-md4hh.176c9f45a5ecd980",
                "namespace": "kube-system",
                "uid": "e3c24008-217c-4074-896f-7f7605f1441b",
                "resourceVersion": "357",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-md4hh",
                "uid": "3b1174f3-c3b2-493f-b215-fabdc7da64a9",
                "apiVersion": "v1",
                "resourceVersion": "348"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-md4hh to kind-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-md4hh.176c9f45db67ce44",
                "namespace": "kube-system",
                "uid": "eaf7d3d6-100c-4022-ae8d-044861f114e2",
                "resourceVersion": "394",
                "creationTimestamp": "2023-06-27T20:51:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-md4hh",
                "uid": "3b1174f3-c3b2-493f-b215-fabdc7da64a9",
                "apiVersion": "v1",
                "resourceVersion": "353",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20230511-dc714da8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:22Z",
            "lastTimestamp": "2023-06-27T20:51:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-md4hh.176c9f45fd835c00",
                "namespace": "kube-system",
                "uid": "2e52023c-118f-4cff-8456-95a07f3735eb",
                "resourceVersion": "398",
                "creationTimestamp": "2023-06-27T20:51:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-md4hh",
                "uid": "3b1174f3-c3b2-493f-b215-fabdc7da64a9",
                "apiVersion": "v1",
                "resourceVersion": "353",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:23Z",
            "lastTimestamp": "2023-06-27T20:51:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-md4hh.176c9f46613c7858",
                "namespace": "kube-system",
                "uid": "15a6fe32-9f75-4c3f-b32b-38bc5d1ee532",
                "resourceVersion": "403",
                "creationTimestamp": "2023-06-27T20:51:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-md4hh",
                "uid": "3b1174f3-c3b2-493f-b215-fabdc7da64a9",
                "apiVersion": "v1",
                "resourceVersion": "353",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:24Z",
            "lastTimestamp": "2023-06-27T20:51:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.176c9f45a48a97a8",
                "namespace": "kube-system",
                "uid": "faf1ecde-dfb4-4941-bb44-53420cb1142a",
                "resourceVersion": "354",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "92733196-70bc-4ba5-a9a9-3e79681636db",
                "apiVersion": "apps/v1",
                "resourceVersion": "268"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-md4hh",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-kind-control-plane.176c9f457d88521c",
                "namespace": "kube-system",
                "uid": "5d0983d5-c4b4-46a1-9908-bf38d0d18466",
                "resourceVersion": "329",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-kind-control-plane",
                "uid": "ff5a9f20-dd70-43f2-b135-c0558447c42c",
                "apiVersion": "v1",
                "resourceVersion": "315"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-kind-control-plane.176c9f4ef3b25ccc",
                "namespace": "kube-system",
                "uid": "b4daa307-21b7-40ac-92fe-812e2c6ae596",
                "resourceVersion": "492",
                "creationTimestamp": "2023-06-27T20:52:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-kind-control-plane",
                "uid": "b97232df7635c1e88c7bd9309b8e78ae",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: HTTP probe failed with statuscode: 500",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:52:01Z",
            "lastTimestamp": "2023-06-27T20:52:05Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-kind-control-plane.176c9f50011b343c",
                "namespace": "kube-system",
                "uid": "355252ad-4150-4e59-84b6-edf71baad022",
                "resourceVersion": "493",
                "creationTimestamp": "2023-06-27T20:52:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-kind-control-plane",
                "uid": "b97232df7635c1e88c7bd9309b8e78ae",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Unhealthy",
            "message": "Liveness probe failed: HTTP probe failed with statuscode: 500",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:52:06Z",
            "lastTimestamp": "2023-06-27T20:52:06Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-kind-control-plane.176c9f457d971a7c",
                "namespace": "kube-system",
                "uid": "b466302a-ae50-403b-9133-03b64fbf6d8f",
                "resourceVersion": "332",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-kind-control-plane",
                "uid": "e4c6116f-8b03-40de-9e8e-aaab1ca45ca3",
                "apiVersion": "v1",
                "resourceVersion": "283"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.176c9f423ddb6814",
                "namespace": "kube-system",
                "uid": "3380fd4c-fcc8-4821-93b0-97345847d8b1",
                "resourceVersion": "166",
                "creationTimestamp": "2023-06-27T20:51:07Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "f5b395e9-94fd-4108-a510-ec672379b107",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "164"
            },
            "reason": "LeaderElection",
            "message": "kind-control-plane_cbff6984-776a-460a-b811-7bebf7a6c5d8 became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2023-06-27T20:51:07Z",
            "lastTimestamp": "2023-06-27T20:51:07Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-4fhqn.176c9f45a4f83880",
                "namespace": "kube-system",
                "uid": "a52f3a2b-aa9d-4bcf-aaa9-277c01c1be16",
                "resourceVersion": "355",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-4fhqn",
                "uid": "e091e72b-be32-4695-a3d5-cf3bbe9039ec",
                "apiVersion": "v1",
                "resourceVersion": "346"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-4fhqn to kind-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-4fhqn.176c9f45c68e34e0",
                "namespace": "kube-system",
                "uid": "646d9b5d-63e1-4a59-805b-95441ac89049",
                "resourceVersion": "393",
                "creationTimestamp": "2023-06-27T20:51:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-4fhqn",
                "uid": "e091e72b-be32-4695-a3d5-cf3bbe9039ec",
                "apiVersion": "v1",
                "resourceVersion": "351",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.27.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:22Z",
            "lastTimestamp": "2023-06-27T20:51:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-4fhqn.176c9f45e966dbfc",
                "namespace": "kube-system",
                "uid": "ae430dd0-62c2-4d61-b6cb-97f36d999689",
                "resourceVersion": "395",
                "creationTimestamp": "2023-06-27T20:51:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-4fhqn",
                "uid": "e091e72b-be32-4695-a3d5-cf3bbe9039ec",
                "apiVersion": "v1",
                "resourceVersion": "351",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:22Z",
            "lastTimestamp": "2023-06-27T20:51:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-4fhqn.176c9f45f4c76048",
                "namespace": "kube-system",
                "uid": "0b316005-6ae5-46bc-be70-e3653b13d7fc",
                "resourceVersion": "396",
                "creationTimestamp": "2023-06-27T20:51:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-4fhqn",
                "uid": "e091e72b-be32-4695-a3d5-cf3bbe9039ec",
                "apiVersion": "v1",
                "resourceVersion": "351",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:23Z",
            "lastTimestamp": "2023-06-27T20:51:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.176c9f45a425a1f4",
                "namespace": "kube-system",
                "uid": "5a88fe2f-57f0-418a-8ba0-2600f8a79916",
                "resourceVersion": "349",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "23cab729-c603-4ca0-ad4c-3b64c23c7c52",
                "apiVersion": "apps/v1",
                "resourceVersion": "241"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-4fhqn",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-kind-control-plane.176c9f457d834fb0",
                "namespace": "kube-system",
                "uid": "e3e4d8bd-709a-4f20-ba69-3a0a94553fec",
                "resourceVersion": "327",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-kind-control-plane",
                "uid": "f3c39315-0979-4c0b-8fd6-a73773ee7557",
                "apiVersion": "v1",
                "resourceVersion": "292"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.176c9f434af979b8",
                "namespace": "kube-system",
                "uid": "92761f5d-184a-4353-b124-faf188b8465a",
                "resourceVersion": "271",
                "creationTimestamp": "2023-06-27T20:51:11Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "834a41f0-2186-4ce6-b53a-3ac2d916e76c",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "270"
            },
            "reason": "LeaderElection",
            "message": "kind-control-plane_618dd866-c60d-4754-8f6d-e1115e0f5344 became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-27T20:51:11Z",
            "lastTimestamp": "2023-06-27T20:51:11Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "5310bddf-8eb0-4c20-82db-0cc38ceb11b2",
                "resourceVersion": "239",
                "creationTimestamp": "2023-06-27T20:51:09Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "kindnet",
                "namespace": "kube-system",
                "uid": "92733196-70bc-4ba5-a9a9-3e79681636db",
                "resourceVersion": "413",
                "generation": 1,
                "creationTimestamp": "2023-06-27T20:51:11Z",
                "labels": {
                    "app": "kindnet",
                    "k8s-app": "kindnet",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "kindnet"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kindnet",
                            "k8s-app": "kindnet",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-cfg",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kindnet-cni",
                                "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_SUBNET",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_ENDPOINT",
                                        "value": "kind-control-plane:6443"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-cfg",
                                        "mountPath": "/etc/cni/net.d"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_RAW",
                                            "NET_ADMIN"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kindnet",
                        "serviceAccount": "kindnet",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "23cab729-c603-4ca0-ad4c-3b64c23c7c52",
                "resourceVersion": "401",
                "generation": 1,
                "creationTimestamp": "2023-06-27T20:51:09Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.27.3",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "de61a6e1-ff9c-4536-91ec-cbf760f5c692",
                "resourceVersion": "446",
                "generation": 1,
                "creationTimestamp": "2023-06-27T20:51:09Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-06-27T20:51:28Z",
                        "lastTransitionTime": "2023-06-27T20:51:28Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-06-27T20:51:28Z",
                        "lastTransitionTime": "2023-06-27T20:51:22Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-5d78c9869d\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d",
                "namespace": "kube-system",
                "uid": "4a984443-5505-4887-9ab5-f3e5ab488e72",
                "resourceVersion": "444",
                "generation": 1,
                "creationTimestamp": "2023-06-27T20:51:22Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "de61a6e1-ff9c-4536-91ec-cbf760f5c692",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "5d78c9869d"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "5d78c9869d"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d-2rmlv",
                "generateName": "coredns-5d78c9869d-",
                "namespace": "kube-system",
                "uid": "e2d85a67-881a-4bf8-9067-2e63a2fb3c08",
                "resourceVersion": "436",
                "creationTimestamp": "2023-06-27T20:51:22Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5d78c9869d",
                        "uid": "4a984443-5505-4887-9ab5-f3e5ab488e72",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-h5llr",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-h5llr",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "kind-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:28Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:28Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:25Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "10.244.0.4",
                "podIPs": [
                    {
                        "ip": "10.244.0.4"
                    }
                ],
                "startTime": "2023-06-27T20:51:25Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-27T20:51:28Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "imageID": "sha256:ead0a4a53df89fd173874b46093b6e62d8c72967bbf606d672c9e8c9b601a4fc",
                        "containerID": "containerd://b328d080cd798e8d129b4380dd0942666d4955291cfc479e165faf31b1e2110a",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-qzsrc",
                "generateName": "coredns-5d78c9869d-",
                "namespace": "kube-system",
                "uid": "fc4669da-bf95-44b0-b8bd-6b2037c144d9",
                "resourceVersion": "441",
                "creationTimestamp": "2023-06-27T20:51:22Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5d78c9869d",
                        "uid": "4a984443-5505-4887-9ab5-f3e5ab488e72",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-c6drn",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-c6drn",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "kind-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:28Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:28Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:25Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "10.244.0.3",
                "podIPs": [
                    {
                        "ip": "10.244.0.3"
                    }
                ],
                "startTime": "2023-06-27T20:51:25Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-27T20:51:28Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "imageID": "sha256:ead0a4a53df89fd173874b46093b6e62d8c72967bbf606d672c9e8c9b601a4fc",
                        "containerID": "containerd://0ab0ee28dbde1956d7b0abdc8e504c3835f5334e46f2e800902d5cbc3ce559c1",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-kind-control-plane",
                "namespace": "kube-system",
                "uid": "f5902cc5-7cd0-4744-aa04-ebcffcd49027",
                "resourceVersion": "450",
                "creationTimestamp": "2023-06-27T20:51:09Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.2:2379",
                    "kubernetes.io/config.hash": "4083a780e70ab7f4aa5df62f5efec388",
                    "kubernetes.io/config.mirror": "4083a780e70ab7f4aa5df62f5efec388",
                    "kubernetes.io/config.seen": "2023-06-27T20:51:09.549700800Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "kind-control-plane",
                        "uid": "f2514a52-aa5b-4d24-bf77-c3d49690da72",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.7-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.18.0.2:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://172.18.0.2:2380",
                            "--initial-cluster=kind-control-plane=https://172.18.0.2:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.18.0.2:2380",
                            "--name=kind-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "kind-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:15Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:15Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:09Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2023-06-27T20:51:09Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-27T20:51:00Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/etcd:3.5.7-0",
                        "imageID": "sha256:86b6af7dd652c1b38118be1c338e9354b33469e69a218f7e290a0ca5304ad681",
                        "containerID": "containerd://34e6086705a8e930a3a331b7f0d6f7e8ad01831950e4abdd432d106d16f5fe8c",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kindnet-md4hh",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "3b1174f3-c3b2-493f-b215-fabdc7da64a9",
                "resourceVersion": "408",
                "creationTimestamp": "2023-06-27T20:51:21Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "68bf578d5f",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "92733196-70bc-4ba5-a9a9-3e79681636db",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-gthhd",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "kind-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-gthhd",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "kind-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "kind-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:21Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:25Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:25Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:21Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2023-06-27T20:51:21Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-27T20:51:24Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                        "imageID": "sha256:b0b1fa0f58c6e932b7f20bf208b2841317a1e8c88cc51b18358310bbd8ec95da",
                        "containerID": "containerd://aac4a79ec3068a74ea3b851bb9ccf350a58adde7cb2f1120678b0db8a1f2ddb9",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-kind-control-plane",
                "namespace": "kube-system",
                "uid": "ff5a9f20-dd70-43f2-b135-c0558447c42c",
                "resourceVersion": "451",
                "creationTimestamp": "2023-06-27T20:51:09Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.2:6443",
                    "kubernetes.io/config.hash": "b97232df7635c1e88c7bd9309b8e78ae",
                    "kubernetes.io/config.mirror": "b97232df7635c1e88c7bd9309b8e78ae",
                    "kubernetes.io/config.seen": "2023-06-27T20:51:09.549705500Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "kind-control-plane",
                        "uid": "f2514a52-aa5b-4d24-bf77-c3d49690da72",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.27.3",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.18.0.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "kind-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:20Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:20Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:09Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2023-06-27T20:51:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-27T20:51:00Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-apiserver:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                        "containerID": "containerd://ee5a8a15e3b8b8194407ee0dab69bd2eff693fbe08835dad22fc7d72a02ba6ab",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-kind-control-plane",
                "namespace": "kube-system",
                "uid": "e4c6116f-8b03-40de-9e8e-aaab1ca45ca3",
                "resourceVersion": "453",
                "creationTimestamp": "2023-06-27T20:51:09Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "b192bc79b664e59b2a5862c8486030a1",
                    "kubernetes.io/config.mirror": "b192bc79b664e59b2a5862c8486030a1",
                    "kubernetes.io/config.seen": "2023-06-27T20:51:09.549707000Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "kind-control-plane",
                        "uid": "f2514a52-aa5b-4d24-bf77-c3d49690da72",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.27.3",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=kind",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "kind-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:09Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2023-06-27T20:51:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-27T20:50:59Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-controller-manager:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                        "containerID": "containerd://cbde0517fdc0ff7708b939c87140fd7bc140ba2523668a7f8ffa073d7e07c6f6",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-4fhqn",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "e091e72b-be32-4695-a3d5-cf3bbe9039ec",
                "resourceVersion": "400",
                "creationTimestamp": "2023-06-27T20:51:21Z",
                "labels": {
                    "controller-revision-hash": "56999f657b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "23cab729-c603-4ca0-ad4c-3b64c23c7c52",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-jnh55",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-jnh55",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "kind-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "kind-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:21Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:23Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:23Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:21Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2023-06-27T20:51:21Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-27T20:51:23Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                        "containerID": "containerd://55b2f1e7b9939bdddca8f45ec0da480dfec37c0998a57315a570dfe6b97fe0ee",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-kind-control-plane",
                "namespace": "kube-system",
                "uid": "f3c39315-0979-4c0b-8fd6-a73773ee7557",
                "resourceVersion": "452",
                "creationTimestamp": "2023-06-27T20:51:09Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "49cc7c1fd3702c40b2686ea7486091d3",
                    "kubernetes.io/config.mirror": "49cc7c1fd3702c40b2686ea7486091d3",
                    "kubernetes.io/config.seen": "2023-06-27T20:51:09.549708200Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "kind-control-plane",
                        "uid": "f2514a52-aa5b-4d24-bf77-c3d49690da72",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.27.3",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "kind-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:17Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:17Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-27T20:51:09Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2023-06-27T20:51:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-27T20:51:00Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-scheduler:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                        "containerID": "containerd://9218cc6460a005b36132fc56400325c061244625002a7df1c768b285f7a3f26b",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-5d78c9869d-2rmlv ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = 591cf328cccc12bc490481273e738df59329c62c0b729d94e8b61db9961c2fa5f046dd37f1cf888b953814040d180f52594972691cd6ff41be96639138a43908
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
==== END logs for container coredns of pod kube-system/coredns-5d78c9869d-2rmlv ====
==== START logs for container coredns of pod kube-system/coredns-5d78c9869d-qzsrc ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = 591cf328cccc12bc490481273e738df59329c62c0b729d94e8b61db9961c2fa5f046dd37f1cf888b953814040d180f52594972691cd6ff41be96639138a43908
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
==== END logs for container coredns of pod kube-system/coredns-5d78c9869d-qzsrc ====
==== START logs for container etcd of pod kube-system/etcd-kind-control-plane ====
{"level":"info","ts":"2023-06-27T20:51:00.465Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.18.0.2:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://172.18.0.2:2380","--initial-cluster=kind-control-plane=https://172.18.0.2:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.18.0.2:2380","--name=kind-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"info","ts":"2023-06-27T20:51:00.465Z","caller":"embed/etcd.go:124","msg":"configuring peer listeners","listen-peer-urls":["https://172.18.0.2:2380"]}
{"level":"info","ts":"2023-06-27T20:51:00.465Z","caller":"embed/etcd.go:484","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-06-27T20:51:00.466Z","caller":"embed/etcd.go:132","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"]}
{"level":"info","ts":"2023-06-27T20:51:00.466Z","caller":"embed/etcd.go:306","msg":"starting an etcd server","etcd-version":"3.5.7","git-sha":"215b53cf3","go-version":"go1.17.13","go-os":"linux","go-arch":"amd64","max-cpu-set":4,"max-cpu-available":4,"member-initialized":false,"name":"kind-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.18.0.2:2380"],"listen-peer-urls":["https://172.18.0.2:2380"],"advertise-client-urls":["https://172.18.0.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"kind-control-plane=https://172.18.0.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-06-27T20:51:00.524Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"57.5522ms"}
{"level":"info","ts":"2023-06-27T20:51:00.634Z","caller":"etcdserver/raft.go:494","msg":"starting local member","local-member-id":"e58c878e0e01014","cluster-id":"c74448475845f0fb"}
{"level":"info","ts":"2023-06-27T20:51:00.634Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 switched to configuration voters=()"}
{"level":"info","ts":"2023-06-27T20:51:00.634Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became follower at term 0"}
{"level":"info","ts":"2023-06-27T20:51:00.634Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft e58c878e0e01014 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-06-27T20:51:00.635Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became follower at term 1"}
{"level":"info","ts":"2023-06-27T20:51:00.635Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 switched to configuration voters=(1033796535975940116)"}
{"level":"warn","ts":"2023-06-27T20:51:00.714Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-06-27T20:51:00.755Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-06-27T20:51:00.785Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-06-27T20:51:00.820Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"e58c878e0e01014","local-server-version":"3.5.7","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-06-27T20:51:00.820Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"e58c878e0e01014","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-06-27T20:51:00.821Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-06-27T20:51:00.822Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-06-27T20:51:00.822Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-06-27T20:51:00.827Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-06-27T20:51:00.828Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"172.18.0.2:2380"}
{"level":"info","ts":"2023-06-27T20:51:00.828Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"172.18.0.2:2380"}
{"level":"info","ts":"2023-06-27T20:51:00.829Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"e58c878e0e01014","initial-advertise-peer-urls":["https://172.18.0.2:2380"],"listen-peer-urls":["https://172.18.0.2:2380"],"advertise-client-urls":["https://172.18.0.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-06-27T20:51:00.829Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-06-27T20:51:00.844Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 switched to configuration voters=(1033796535975940116)"}
{"level":"info","ts":"2023-06-27T20:51:00.844Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"c74448475845f0fb","local-member-id":"e58c878e0e01014","added-peer-id":"e58c878e0e01014","added-peer-peer-urls":["https://172.18.0.2:2380"]}
{"level":"info","ts":"2023-06-27T20:51:01.335Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 is starting a new election at term 1"}
{"level":"info","ts":"2023-06-27T20:51:01.336Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became pre-candidate at term 1"}
{"level":"info","ts":"2023-06-27T20:51:01.336Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 received MsgPreVoteResp from e58c878e0e01014 at term 1"}
{"level":"info","ts":"2023-06-27T20:51:01.336Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became candidate at term 2"}
{"level":"info","ts":"2023-06-27T20:51:01.336Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 received MsgVoteResp from e58c878e0e01014 at term 2"}
{"level":"info","ts":"2023-06-27T20:51:01.336Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became leader at term 2"}
{"level":"info","ts":"2023-06-27T20:51:01.336Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: e58c878e0e01014 elected leader e58c878e0e01014 at term 2"}
{"level":"info","ts":"2023-06-27T20:51:01.390Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"e58c878e0e01014","local-member-attributes":"{Name:kind-control-plane ClientURLs:[https://172.18.0.2:2379]}","request-path":"/0/members/e58c878e0e01014/attributes","cluster-id":"c74448475845f0fb","publish-timeout":"7s"}
{"level":"info","ts":"2023-06-27T20:51:01.390Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-06-27T20:51:01.390Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-06-27T20:51:01.390Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-06-27T20:51:01.391Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-06-27T20:51:01.391Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-06-27T20:51:01.392Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-06-27T20:51:01.392Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"172.18.0.2:2379"}
{"level":"info","ts":"2023-06-27T20:51:01.441Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"c74448475845f0fb","local-member-id":"e58c878e0e01014","cluster-version":"3.5"}
{"level":"info","ts":"2023-06-27T20:51:01.441Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-06-27T20:51:01.441Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2023-06-27T20:51:04.338Z","caller":"traceutil/trace.go:171","msg":"trace[705526824] transaction","detail":"{read_only:false; response_revision:19; number_of_response:1; }","duration":"109.8353ms","start":"2023-06-27T20:51:04.228Z","end":"2023-06-27T20:51:04.338Z","steps":["trace[705526824] 'process raft request'  (duration: 81.1675ms)","trace[705526824] 'compare'  (duration: 28.3445ms)"],"step_count":2}
{"level":"info","ts":"2023-06-27T20:51:04.338Z","caller":"traceutil/trace.go:171","msg":"trace[1238242835] transaction","detail":"{read_only:false; response_revision:20; number_of_response:1; }","duration":"107.4252ms","start":"2023-06-27T20:51:04.231Z","end":"2023-06-27T20:51:04.338Z","steps":["trace[1238242835] 'process raft request'  (duration: 106.7137ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:04.338Z","caller":"traceutil/trace.go:171","msg":"trace[627744988] transaction","detail":"{read_only:false; response_revision:22; number_of_response:1; }","duration":"103.6831ms","start":"2023-06-27T20:51:04.235Z","end":"2023-06-27T20:51:04.338Z","steps":["trace[627744988] 'process raft request'  (duration: 103.0074ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:04.338Z","caller":"traceutil/trace.go:171","msg":"trace[1164231285] transaction","detail":"{read_only:false; response_revision:25; number_of_response:1; }","duration":"101.5758ms","start":"2023-06-27T20:51:04.237Z","end":"2023-06-27T20:51:04.338Z","steps":["trace[1164231285] 'process raft request'  (duration: 100.8897ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:04.339Z","caller":"traceutil/trace.go:171","msg":"trace[1355904789] transaction","detail":"{read_only:false; response_revision:21; number_of_response:1; }","duration":"107.5662ms","start":"2023-06-27T20:51:04.231Z","end":"2023-06-27T20:51:04.339Z","steps":["trace[1355904789] 'process raft request'  (duration: 106.4223ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:04.339Z","caller":"traceutil/trace.go:171","msg":"trace[1072666790] transaction","detail":"{read_only:false; response_revision:24; number_of_response:1; }","duration":"102.7864ms","start":"2023-06-27T20:51:04.236Z","end":"2023-06-27T20:51:04.339Z","steps":["trace[1072666790] 'process raft request'  (duration: 101.6527ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:04.339Z","caller":"traceutil/trace.go:171","msg":"trace[594163824] transaction","detail":"{read_only:false; response_revision:23; number_of_response:1; }","duration":"104.2208ms","start":"2023-06-27T20:51:04.235Z","end":"2023-06-27T20:51:04.339Z","steps":["trace[594163824] 'process raft request'  (duration: 102.7739ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:04.362Z","caller":"traceutil/trace.go:171","msg":"trace[1223070483] transaction","detail":"{read_only:false; response_revision:26; number_of_response:1; }","duration":"109.4824ms","start":"2023-06-27T20:51:04.252Z","end":"2023-06-27T20:51:04.362Z","steps":["trace[1223070483] 'process raft request'  (duration: 109.2282ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:04.362Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"109.3427ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/resourcequotas/kube-public/\" range_end:\"/registry/resourcequotas/kube-public0\" ","response":"range_response_count:0 size:4"}
{"level":"info","ts":"2023-06-27T20:51:04.362Z","caller":"traceutil/trace.go:171","msg":"trace[1108801999] range","detail":"{range_begin:/registry/resourcequotas/kube-public/; range_end:/registry/resourcequotas/kube-public0; response_count:0; response_revision:27; }","duration":"109.432ms","start":"2023-06-27T20:51:04.253Z","end":"2023-06-27T20:51:04.362Z","steps":["trace[1108801999] 'agreement among raft nodes before linearized reading'  (duration: 109.2544ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:05.764Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"201.9776ms","expected-duration":"100ms","prefix":"","request":"header:<ID:1158701631323872239 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/clusterroles/system:node-problem-detector\" mod_revision:0 > success:<request_put:<key:\"/registry/clusterroles/system:node-problem-detector\" value_size:583 >> failure:<>>","response":"size:14"}
{"level":"info","ts":"2023-06-27T20:51:05.764Z","caller":"traceutil/trace.go:171","msg":"trace[959386139] transaction","detail":"{read_only:false; response_revision:87; number_of_response:1; }","duration":"283.9543ms","start":"2023-06-27T20:51:05.480Z","end":"2023-06-27T20:51:05.764Z","steps":["trace[959386139] 'process raft request'  (duration: 81.2702ms)","trace[959386139] 'compare'  (duration: 201.801ms)"],"step_count":2}
{"level":"info","ts":"2023-06-27T20:51:06.000Z","caller":"traceutil/trace.go:171","msg":"trace[703257783] transaction","detail":"{read_only:false; response_revision:89; number_of_response:1; }","duration":"158.3393ms","start":"2023-06-27T20:51:05.841Z","end":"2023-06-27T20:51:06.000Z","steps":["trace[703257783] 'process raft request'  (duration: 80.6994ms)","trace[703257783] 'compare'  (duration: 77.1917ms)"],"step_count":2}
{"level":"warn","ts":"2023-06-27T20:51:06.236Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"103.9666ms","expected-duration":"100ms","prefix":"","request":"header:<ID:1158701631323872249 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/clusterroles/system:kube-aggregator\" mod_revision:0 > success:<request_put:<key:\"/registry/clusterroles/system:kube-aggregator\" value_size:529 >> failure:<>>","response":"size:14"}
{"level":"info","ts":"2023-06-27T20:51:06.237Z","caller":"traceutil/trace.go:171","msg":"trace[457902998] transaction","detail":"{read_only:false; response_revision:91; number_of_response:1; }","duration":"170.4392ms","start":"2023-06-27T20:51:06.067Z","end":"2023-06-27T20:51:06.237Z","steps":["trace[457902998] 'process raft request'  (duration: 65.6795ms)","trace[457902998] 'compare'  (duration: 103.8176ms)"],"step_count":2}
{"level":"warn","ts":"2023-06-27T20:51:33.056Z","caller":"wal/wal.go:805","msg":"slow fdatasync","took":"1.0880149s","expected-duration":"1s"}
{"level":"info","ts":"2023-06-27T20:51:33.057Z","caller":"traceutil/trace.go:171","msg":"trace[1360722888] transaction","detail":"{read_only:false; response_revision:457; number_of_response:1; }","duration":"1.0893852s","start":"2023-06-27T20:51:31.968Z","end":"2023-06-27T20:51:33.057Z","steps":["trace[1360722888] 'process raft request'  (duration: 1.088867s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:33.059Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:31.968Z","time spent":"1.0896586s","remote":"127.0.0.1:42918","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":474,"response count":0,"response size":39,"request content":"compare:<target:MOD key:\"/registry/leases/kube-system/kube-scheduler\" mod_revision:454 > success:<request_put:<key:\"/registry/leases/kube-system/kube-scheduler\" value_size:423 >> failure:<request_range:<key:\"/registry/leases/kube-system/kube-scheduler\" > >"}
{"level":"warn","ts":"2023-06-27T20:51:33.787Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873001,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:51:34.288Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873001,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:51:34.651Z","caller":"wal/wal.go:805","msg":"slow fdatasync","took":"1.5945977s","expected-duration":"1s"}
{"level":"warn","ts":"2023-06-27T20:51:35.134Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"482.4762ms","expected-duration":"100ms","prefix":"","request":"header:<ID:1158701631323873003 > lease_revoke:<id:101488fe9fb99da1>","response":"size:28"}
{"level":"info","ts":"2023-06-27T20:51:35.134Z","caller":"traceutil/trace.go:171","msg":"trace[950735436] linearizableReadLoop","detail":"{readStateIndex:471; appliedIndex:470; }","duration":"1.8473894s","start":"2023-06-27T20:51:33.287Z","end":"2023-06-27T20:51:35.134Z","steps":["trace[950735436] 'read index received'  (duration: 1.3648276s)","trace[950735436] 'applied index is now lower than readState.Index'  (duration: 482.5608ms)"],"step_count":2}
{"level":"warn","ts":"2023-06-27T20:51:35.134Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.8475288s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-06-27T20:51:35.134Z","caller":"traceutil/trace.go:171","msg":"trace[728822617] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:457; }","duration":"1.8475767s","start":"2023-06-27T20:51:33.287Z","end":"2023-06-27T20:51:35.134Z","steps":["trace[728822617] 'agreement among raft nodes before linearized reading'  (duration: 1.847484s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:35.134Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:33.287Z","time spent":"1.8476239s","remote":"127.0.0.1:42908","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":28,"request content":"key:\"/registry/health\" "}
{"level":"warn","ts":"2023-06-27T20:51:35.135Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.7398358s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/leases/kube-system/kube-controller-manager\" ","response":"range_response_count:1 size:515"}
{"level":"info","ts":"2023-06-27T20:51:35.135Z","caller":"traceutil/trace.go:171","msg":"trace[383147159] range","detail":"{range_begin:/registry/leases/kube-system/kube-controller-manager; range_end:; response_count:1; response_revision:457; }","duration":"1.7398665s","start":"2023-06-27T20:51:33.395Z","end":"2023-06-27T20:51:35.135Z","steps":["trace[383147159] 'agreement among raft nodes before linearized reading'  (duration: 1.739789s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:35.135Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:33.395Z","time spent":"1.7399043s","remote":"127.0.0.1:42918","response type":"/etcdserverpb.KV/Range","request count":0,"request size":54,"response count":1,"response size":538,"request content":"key:\"/registry/leases/kube-system/kube-controller-manager\" "}
{"level":"warn","ts":"2023-06-27T20:51:35.135Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"846.1683ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-06-27T20:51:35.135Z","caller":"traceutil/trace.go:171","msg":"trace[1904485544] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:457; }","duration":"846.2025ms","start":"2023-06-27T20:51:34.289Z","end":"2023-06-27T20:51:35.135Z","steps":["trace[1904485544] 'agreement among raft nodes before linearized reading'  (duration: 846.1401ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:35.135Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:34.289Z","time spent":"846.2665ms","remote":"127.0.0.1:42908","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":28,"request content":"key:\"/registry/health\" "}
{"level":"info","ts":"2023-06-27T20:51:35.350Z","caller":"traceutil/trace.go:171","msg":"trace[960440911] transaction","detail":"{read_only:false; response_revision:459; number_of_response:1; }","duration":"208.7468ms","start":"2023-06-27T20:51:35.141Z","end":"2023-06-27T20:51:35.350Z","steps":["trace[960440911] 'process raft request'  (duration: 208.6972ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:35.350Z","caller":"traceutil/trace.go:171","msg":"trace[898875230] transaction","detail":"{read_only:false; response_revision:458; number_of_response:1; }","duration":"210.5465ms","start":"2023-06-27T20:51:35.139Z","end":"2023-06-27T20:51:35.350Z","steps":["trace[898875230] 'process raft request'  (duration: 130.0698ms)","trace[898875230] 'compare'  (duration: 80.1632ms)"],"step_count":2}
{"level":"info","ts":"2023-06-27T20:51:41.608Z","caller":"traceutil/trace.go:171","msg":"trace[1284514958] linearizableReadLoop","detail":"{readStateIndex:482; appliedIndex:481; }","duration":"156.3905ms","start":"2023-06-27T20:51:41.452Z","end":"2023-06-27T20:51:41.608Z","steps":["trace[1284514958] 'read index received'  (duration: 156.2301ms)","trace[1284514958] 'applied index is now lower than readState.Index'  (duration: 159.4µs)"],"step_count":2}
{"level":"warn","ts":"2023-06-27T20:51:41.609Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"156.576ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/leases/kube-system/kube-controller-manager\" ","response":"range_response_count:1 size:515"}
{"level":"info","ts":"2023-06-27T20:51:41.609Z","caller":"traceutil/trace.go:171","msg":"trace[271009911] range","detail":"{range_begin:/registry/leases/kube-system/kube-controller-manager; range_end:; response_count:1; response_revision:467; }","duration":"156.6823ms","start":"2023-06-27T20:51:41.452Z","end":"2023-06-27T20:51:41.609Z","steps":["trace[271009911] 'agreement among raft nodes before linearized reading'  (duration: 156.4906ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:41.609Z","caller":"traceutil/trace.go:171","msg":"trace[698837130] transaction","detail":"{read_only:false; response_revision:467; number_of_response:1; }","duration":"172.6499ms","start":"2023-06-27T20:51:41.436Z","end":"2023-06-27T20:51:41.609Z","steps":["trace[698837130] 'process raft request'  (duration: 172.0217ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:41.814Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"135.1674ms","expected-duration":"100ms","prefix":"","request":"header:<ID:1158701631323873041 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/leases/kube-system/kube-controller-manager\" mod_revision:465 > success:<request_put:<key:\"/registry/leases/kube-system/kube-controller-manager\" value_size:440 >> failure:<request_range:<key:\"/registry/leases/kube-system/kube-controller-manager\" > >>","response":"size:16"}
{"level":"info","ts":"2023-06-27T20:51:41.815Z","caller":"traceutil/trace.go:171","msg":"trace[1213834053] transaction","detail":"{read_only:false; response_revision:468; number_of_response:1; }","duration":"200.7924ms","start":"2023-06-27T20:51:41.614Z","end":"2023-06-27T20:51:41.815Z","steps":["trace[1213834053] 'process raft request'  (duration: 64.5498ms)","trace[1213834053] 'compare'  (duration: 134.9237ms)"],"step_count":2}
{"level":"info","ts":"2023-06-27T20:51:43.729Z","caller":"traceutil/trace.go:171","msg":"trace[1046155946] transaction","detail":"{read_only:false; response_revision:469; number_of_response:1; }","duration":"104.9864ms","start":"2023-06-27T20:51:43.624Z","end":"2023-06-27T20:51:43.729Z","steps":["trace[1046155946] 'process raft request'  (duration: 104.5123ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:54.189Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"142.6906ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/leases/kube-system/kube-controller-manager\" ","response":"range_response_count:1 size:514"}
{"level":"info","ts":"2023-06-27T20:51:54.190Z","caller":"traceutil/trace.go:171","msg":"trace[620577119] range","detail":"{range_begin:/registry/leases/kube-system/kube-controller-manager; range_end:; response_count:1; response_revision:482; }","duration":"143.0644ms","start":"2023-06-27T20:51:54.047Z","end":"2023-06-27T20:51:54.190Z","steps":["trace[620577119] 'range keys from in-memory index tree'  (duration: 142.479ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:54.310Z","caller":"traceutil/trace.go:171","msg":"trace[249985347] transaction","detail":"{read_only:false; response_revision:483; number_of_response:1; }","duration":"102.6424ms","start":"2023-06-27T20:51:54.207Z","end":"2023-06-27T20:51:54.310Z","steps":["trace[249985347] 'process raft request'  (duration: 102.2139ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:56.196Z","caller":"traceutil/trace.go:171","msg":"trace[1715072944] transaction","detail":"{read_only:false; response_revision:484; number_of_response:1; }","duration":"228.611ms","start":"2023-06-27T20:51:55.967Z","end":"2023-06-27T20:51:56.196Z","steps":["trace[1715072944] 'process raft request'  (duration: 228.2518ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:56.434Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"155.2386ms","expected-duration":"100ms","prefix":"","request":"header:<ID:1158701631323873099 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/leases/kube-system/apiserver-c7uylvfxlbqccnk6myfkwetzze\" mod_revision:471 > success:<request_put:<key:\"/registry/leases/kube-system/apiserver-c7uylvfxlbqccnk6myfkwetzze\" value_size:610 >> failure:<request_range:<key:\"/registry/leases/kube-system/apiserver-c7uylvfxlbqccnk6myfkwetzze\" > >>","response":"size:16"}
{"level":"info","ts":"2023-06-27T20:51:56.434Z","caller":"traceutil/trace.go:171","msg":"trace[1532567958] linearizableReadLoop","detail":"{readStateIndex:503; appliedIndex:502; }","duration":"131.2527ms","start":"2023-06-27T20:51:56.303Z","end":"2023-06-27T20:51:56.434Z","steps":["trace[1532567958] 'read index received'  (duration: 215.6µs)","trace[1532567958] 'applied index is now lower than readState.Index'  (duration: 131.0308ms)"],"step_count":2}
{"level":"info","ts":"2023-06-27T20:51:56.434Z","caller":"traceutil/trace.go:171","msg":"trace[225945190] transaction","detail":"{read_only:false; response_revision:485; number_of_response:1; }","duration":"445.4648ms","start":"2023-06-27T20:51:55.989Z","end":"2023-06-27T20:51:56.434Z","steps":["trace[225945190] 'process raft request'  (duration: 289.3703ms)","trace[225945190] 'compare'  (duration: 154.4232ms)"],"step_count":2}
{"level":"warn","ts":"2023-06-27T20:51:56.435Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:55.989Z","time spent":"445.7451ms","remote":"127.0.0.1:42918","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":683,"response count":0,"response size":39,"request content":"compare:<target:MOD key:\"/registry/leases/kube-system/apiserver-c7uylvfxlbqccnk6myfkwetzze\" mod_revision:471 > success:<request_put:<key:\"/registry/leases/kube-system/apiserver-c7uylvfxlbqccnk6myfkwetzze\" value_size:610 >> failure:<request_range:<key:\"/registry/leases/kube-system/apiserver-c7uylvfxlbqccnk6myfkwetzze\" > >"}
{"level":"warn","ts":"2023-06-27T20:51:56.435Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"117.2553ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/leases/kube-system/kube-controller-manager\" ","response":"range_response_count:1 size:514"}
{"level":"warn","ts":"2023-06-27T20:51:56.435Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"131.8956ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-06-27T20:51:56.435Z","caller":"traceutil/trace.go:171","msg":"trace[263766675] range","detail":"{range_begin:/registry/leases/kube-system/kube-controller-manager; range_end:; response_count:1; response_revision:485; }","duration":"117.4706ms","start":"2023-06-27T20:51:56.318Z","end":"2023-06-27T20:51:56.435Z","steps":["trace[263766675] 'agreement among raft nodes before linearized reading'  (duration: 117.0241ms)"],"step_count":1}
{"level":"info","ts":"2023-06-27T20:51:56.435Z","caller":"traceutil/trace.go:171","msg":"trace[261943472] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:485; }","duration":"132.6936ms","start":"2023-06-27T20:51:56.303Z","end":"2023-06-27T20:51:56.435Z","steps":["trace[261943472] 'agreement among raft nodes before linearized reading'  (duration: 131.6674ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:56.699Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"148.8606ms","expected-duration":"100ms","prefix":"","request":"header:<ID:1158701631323873103 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/leases/kube-system/kube-controller-manager\" mod_revision:483 > success:<request_put:<key:\"/registry/leases/kube-system/kube-controller-manager\" value_size:440 >> failure:<request_range:<key:\"/registry/leases/kube-system/kube-controller-manager\" > >>","response":"size:16"}
{"level":"info","ts":"2023-06-27T20:51:56.701Z","caller":"traceutil/trace.go:171","msg":"trace[866737918] transaction","detail":"{read_only:false; response_revision:486; number_of_response:1; }","duration":"241.847ms","start":"2023-06-27T20:51:56.459Z","end":"2023-06-27T20:51:56.701Z","steps":["trace[866737918] 'process raft request'  (duration: 90.9599ms)","trace[866737918] 'compare'  (duration: 148.5104ms)"],"step_count":2}
{"level":"warn","ts":"2023-06-27T20:51:58.711Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873106,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:51:59.213Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873106,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:51:59.714Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873106,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:51:59.776Z","caller":"wal/wal.go:805","msg":"slow fdatasync","took":"2.1125077s","expected-duration":"1s"}
{"level":"warn","ts":"2023-06-27T20:51:59.777Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:57.663Z","time spent":"2.1140098s","remote":"127.0.0.1:42868","response type":"/etcdserverpb.Lease/LeaseGrant","request count":-1,"request size":-1,"response count":-1,"response size":-1,"request content":""}
{"level":"info","ts":"2023-06-27T20:51:59.778Z","caller":"traceutil/trace.go:171","msg":"trace[1865621138] linearizableReadLoop","detail":"{readStateIndex:505; appliedIndex:504; }","duration":"1.5672641s","start":"2023-06-27T20:51:58.210Z","end":"2023-06-27T20:51:59.777Z","steps":["trace[1865621138] 'read index received'  (duration: 1.5669342s)","trace[1865621138] 'applied index is now lower than readState.Index'  (duration: 322.8µs)"],"step_count":2}
{"level":"warn","ts":"2023-06-27T20:51:59.779Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.5692852s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/leases/kube-system/kube-scheduler\" ","response":"range_response_count:1 size:489"}
{"level":"warn","ts":"2023-06-27T20:51:59.780Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.4774718s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-06-27T20:51:59.781Z","caller":"traceutil/trace.go:171","msg":"trace[1636517733] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:486; }","duration":"1.4785692s","start":"2023-06-27T20:51:58.302Z","end":"2023-06-27T20:51:59.781Z","steps":["trace[1636517733] 'agreement among raft nodes before linearized reading'  (duration: 1.4768767s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:59.782Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.0679586s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/leases/kube-system/kube-controller-manager\" ","response":"range_response_count:1 size:515"}
{"level":"info","ts":"2023-06-27T20:51:59.783Z","caller":"traceutil/trace.go:171","msg":"trace[1398263741] range","detail":"{range_begin:/registry/leases/kube-system/kube-controller-manager; range_end:; response_count:1; response_revision:486; }","duration":"1.0686363s","start":"2023-06-27T20:51:58.714Z","end":"2023-06-27T20:51:59.783Z","steps":["trace[1398263741] 'agreement among raft nodes before linearized reading'  (duration: 1.0675387s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:59.783Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:58.714Z","time spent":"1.0690829s","remote":"127.0.0.1:42918","response type":"/etcdserverpb.KV/Range","request count":0,"request size":54,"response count":1,"response size":538,"request content":"key:\"/registry/leases/kube-system/kube-controller-manager\" "}
{"level":"warn","ts":"2023-06-27T20:51:59.782Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:58.302Z","time spent":"1.479558s","remote":"127.0.0.1:42908","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":28,"request content":"key:\"/registry/health\" "}
{"level":"info","ts":"2023-06-27T20:51:59.780Z","caller":"traceutil/trace.go:171","msg":"trace[1984178487] range","detail":"{range_begin:/registry/leases/kube-system/kube-scheduler; range_end:; response_count:1; response_revision:486; }","duration":"1.57028s","start":"2023-06-27T20:51:58.210Z","end":"2023-06-27T20:51:59.780Z","steps":["trace[1984178487] 'agreement among raft nodes before linearized reading'  (duration: 1.5681938s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:51:59.785Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:58.210Z","time spent":"1.5750778s","remote":"127.0.0.1:42918","response type":"/etcdserverpb.KV/Range","request count":0,"request size":45,"response count":1,"response size":512,"request content":"key:\"/registry/leases/kube-system/kube-scheduler\" "}
{"level":"warn","ts":"2023-06-27T20:52:00.297Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:00.798Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:01.300Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:01.796Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.9993788s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"","error":"context canceled"}
{"level":"info","ts":"2023-06-27T20:52:01.796Z","caller":"traceutil/trace.go:171","msg":"trace[817005690] range","detail":"{range_begin:/registry/health; range_end:; }","duration":"1.9999943s","start":"2023-06-27T20:51:59.796Z","end":"2023-06-27T20:52:01.796Z","steps":["trace[817005690] 'agreement among raft nodes before linearized reading'  (duration: 1.9992661s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:01.797Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:59.796Z","time spent":"2.0004654s","remote":"127.0.0.1:42906","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":0,"request content":"key:\"/registry/health\" "}
WARNING: 2023/06/27 20:52:01 [core] grpc: Server.processUnaryRPC failed to write status: connection error: desc = "transport is closing"
{"level":"warn","ts":"2023-06-27T20:52:01.803Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:02.308Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:02.810Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:03.312Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:03.814Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:03.837Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"2.0004757s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"","error":"context deadline exceeded"}
{"level":"info","ts":"2023-06-27T20:52:03.837Z","caller":"traceutil/trace.go:171","msg":"trace[1382036428] range","detail":"{range_begin:/registry/health; range_end:; }","duration":"2.0007018s","start":"2023-06-27T20:52:01.836Z","end":"2023-06-27T20:52:03.837Z","steps":["trace[1382036428] 'agreement among raft nodes before linearized reading'  (duration: 2.0004123s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:03.838Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:01.836Z","time spent":"2.0012575s","remote":"127.0.0.1:42908","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":0,"request content":"key:\"/registry/health\" "}
WARNING: 2023/06/27 20:52:03 [core] grpc: Server.processUnaryRPC failed to write status: connection error: desc = "transport is closing"
{"level":"warn","ts":"2023-06-27T20:52:04.315Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:04.798Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:59.806Z","time spent":"4.9923501s","remote":"127.0.0.1:42918","response type":"/etcdserverpb.KV/Txn","request count":0,"request size":0,"response count":0,"response size":0,"request content":""}
WARNING: 2023/06/27 20:52:04 [core] grpc: Server.processUnaryRPC failed to write status: connection error: desc = "transport is closing"
{"level":"warn","ts":"2023-06-27T20:52:04.802Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:59.808Z","time spent":"4.994105s","remote":"127.0.0.1:42918","response type":"/etcdserverpb.KV/Txn","request count":0,"request size":0,"response count":0,"response size":0,"request content":""}
{"level":"warn","ts":"2023-06-27T20:52:04.816Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:05.319Z","caller":"etcdserver/v3_server.go:840","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":1158701631323873110,"retry-timeout":"500ms"}
{"level":"warn","ts":"2023-06-27T20:52:05.465Z","caller":"wal/wal.go:805","msg":"slow fdatasync","took":"5.6729388s","expected-duration":"1s"}
{"level":"warn","ts":"2023-06-27T20:52:05.838Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"2.00086s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"","error":"context canceled"}
{"level":"info","ts":"2023-06-27T20:52:05.838Z","caller":"traceutil/trace.go:171","msg":"trace[344186503] range","detail":"{range_begin:/registry/health; range_end:; }","duration":"2.0010736s","start":"2023-06-27T20:52:03.837Z","end":"2023-06-27T20:52:05.838Z","steps":["trace[344186503] 'agreement among raft nodes before linearized reading'  (duration: 2.0008185s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:05.838Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:03.837Z","time spent":"2.0012053s","remote":"127.0.0.1:42906","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":0,"request content":"key:\"/registry/health\" "}
WARNING: 2023/06/27 20:52:05 [core] grpc: Server.processUnaryRPC failed to write status: connection error: desc = "transport is closing"
{"level":"warn","ts":"2023-06-27T20:52:06.321Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"2.0002782s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"","error":"context canceled"}
{"level":"info","ts":"2023-06-27T20:52:06.321Z","caller":"traceutil/trace.go:171","msg":"trace[1046454193] range","detail":"{range_begin:/registry/health; range_end:; }","duration":"2.0004848s","start":"2023-06-27T20:52:04.321Z","end":"2023-06-27T20:52:06.321Z","steps":["trace[1046454193] 'agreement among raft nodes before linearized reading'  (duration: 2.0002087s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.321Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:04.321Z","time spent":"2.0006021s","remote":"127.0.0.1:42908","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":0,"request content":"key:\"/registry/health\" "}
WARNING: 2023/06/27 20:52:06 [core] grpc: Server.processUnaryRPC failed to write status: connection error: desc = "transport is closing"
{"level":"warn","ts":"2023-06-27T20:52:06.477Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"4.8286s","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 serializable:true keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-06-27T20:52:06.478Z","caller":"traceutil/trace.go:171","msg":"trace[1372275973] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:486; }","duration":"4.8296132s","start":"2023-06-27T20:52:01.648Z","end":"2023-06-27T20:52:06.477Z","steps":["trace[1372275973] 'range keys from in-memory index tree'  (duration: 4.828467s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.477Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.0109219s","expected-duration":"100ms","prefix":"","request":"header:<ID:1158701631323873111 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/masterleases/172.18.0.2\" mod_revision:474 > success:<request_put:<key:\"/registry/masterleases/172.18.0.2\" value_size:63 lease:1158701631323873107 >> failure:<request_range:<key:\"/registry/masterleases/172.18.0.2\" > >>","response":"size:16"}
{"level":"info","ts":"2023-06-27T20:52:06.478Z","caller":"traceutil/trace.go:171","msg":"trace[899140608] transaction","detail":"{read_only:false; response_revision:487; number_of_response:1; }","duration":"6.6921491s","start":"2023-06-27T20:51:59.786Z","end":"2023-06-27T20:52:06.478Z","steps":["trace[899140608] 'process raft request'  (duration: 5.6802328s)","trace[899140608] 'compare'  (duration: 1.0098063s)"],"step_count":2}
{"level":"warn","ts":"2023-06-27T20:52:06.478Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:51:59.785Z","time spent":"6.6931068s","remote":"127.0.0.1:42868","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":112,"response count":0,"response size":39,"request content":"compare:<target:MOD key:\"/registry/masterleases/172.18.0.2\" mod_revision:474 > success:<request_put:<key:\"/registry/masterleases/172.18.0.2\" value_size:63 lease:1158701631323873107 >> failure:<request_range:<key:\"/registry/masterleases/172.18.0.2\" > >"}
{"level":"warn","ts":"2023-06-27T20:52:06.617Z","caller":"wal/wal.go:805","msg":"slow fdatasync","took":"1.1517892s","expected-duration":"1s"}
{"level":"info","ts":"2023-06-27T20:52:06.622Z","caller":"traceutil/trace.go:171","msg":"trace[935817296] transaction","detail":"{read_only:false; response_revision:490; number_of_response:1; }","duration":"5.7162591s","start":"2023-06-27T20:52:00.906Z","end":"2023-06-27T20:52:06.622Z","steps":["trace[935817296] 'process raft request'  (duration: 5.7161703s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.623Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:00.906Z","time spent":"5.7166635s","remote":"127.0.0.1:42918","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":561,"response count":0,"response size":39,"request content":"compare:<target:MOD key:\"/registry/leases/kube-node-lease/kind-control-plane\" mod_revision:479 > success:<request_put:<key:\"/registry/leases/kube-node-lease/kind-control-plane\" value_size:502 >> failure:<request_range:<key:\"/registry/leases/kube-node-lease/kind-control-plane\" > >"}
{"level":"info","ts":"2023-06-27T20:52:06.622Z","caller":"traceutil/trace.go:171","msg":"trace[1479699994] linearizableReadLoop","detail":"{readStateIndex:511; appliedIndex:505; }","duration":"6.8260609s","start":"2023-06-27T20:51:59.796Z","end":"2023-06-27T20:52:06.622Z","steps":["trace[1479699994] 'read index received'  (duration: 5.66989s)","trace[1479699994] 'applied index is now lower than readState.Index'  (duration: 1.1561704s)"],"step_count":2}
{"level":"info","ts":"2023-06-27T20:52:06.622Z","caller":"traceutil/trace.go:171","msg":"trace[1570130918] transaction","detail":"{read_only:false; response_revision:491; number_of_response:1; }","duration":"4.8059082s","start":"2023-06-27T20:52:01.816Z","end":"2023-06-27T20:52:06.622Z","steps":["trace[1570130918] 'process raft request'  (duration: 4.8057395s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.623Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:01.816Z","time spent":"4.8064752s","remote":"127.0.0.1:42872","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":733,"response count":0,"response size":39,"request content":"compare:<target:MOD key:\"/registry/events/kube-system/kube-apiserver-kind-control-plane.176c9f4ef3b25ccc\" mod_revision:0 > success:<request_put:<key:\"/registry/events/kube-system/kube-apiserver-kind-control-plane.176c9f4ef3b25ccc\" value_size:636 lease:1158701631323872400 >> failure:<>"}
{"level":"warn","ts":"2023-06-27T20:52:06.623Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"3.3998249s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/statefulsets/\" range_end:\"/registry/statefulsets0\" count_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-06-27T20:52:06.623Z","caller":"traceutil/trace.go:171","msg":"trace[973935360] range","detail":"{range_begin:/registry/statefulsets/; range_end:/registry/statefulsets0; response_count:0; response_revision:491; }","duration":"3.3999076s","start":"2023-06-27T20:52:03.223Z","end":"2023-06-27T20:52:06.623Z","steps":["trace[973935360] 'agreement among raft nodes before linearized reading'  (duration: 3.3997885s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.623Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:03.223Z","time spent":"3.4000348s","remote":"127.0.0.1:42964","response type":"/etcdserverpb.KV/Range","request count":0,"request size":52,"response count":0,"response size":28,"request content":"key:\"/registry/statefulsets/\" range_end:\"/registry/statefulsets0\" count_only:true "}
{"level":"warn","ts":"2023-06-27T20:52:06.623Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"143.4408ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/services/endpoints/default/kubernetes\" ","response":"range_response_count:1 size:418"}
{"level":"info","ts":"2023-06-27T20:52:06.624Z","caller":"traceutil/trace.go:171","msg":"trace[633838896] range","detail":"{range_begin:/registry/services/endpoints/default/kubernetes; range_end:; response_count:1; response_revision:491; }","duration":"143.5593ms","start":"2023-06-27T20:52:06.480Z","end":"2023-06-27T20:52:06.624Z","steps":["trace[633838896] 'agreement among raft nodes before linearized reading'  (duration: 143.3564ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.624Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.2495504s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/persistentvolumes/\" range_end:\"/registry/persistentvolumes0\" count_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-06-27T20:52:06.624Z","caller":"traceutil/trace.go:171","msg":"trace[15574677] range","detail":"{range_begin:/registry/persistentvolumes/; range_end:/registry/persistentvolumes0; response_count:0; response_revision:491; }","duration":"1.2499192s","start":"2023-06-27T20:52:05.374Z","end":"2023-06-27T20:52:06.624Z","steps":["trace[15574677] 'agreement among raft nodes before linearized reading'  (duration: 1.2495075s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.624Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:05.374Z","time spent":"1.2503236s","remote":"127.0.0.1:42880","response type":"/etcdserverpb.KV/Range","request count":0,"request size":62,"response count":0,"response size":28,"request content":"key:\"/registry/persistentvolumes/\" range_end:\"/registry/persistentvolumes0\" count_only:true "}
{"level":"warn","ts":"2023-06-27T20:52:06.624Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"2.6818584s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/secrets/\" range_end:\"/registry/secrets0\" count_only:true ","response":"range_response_count:0 size:7"}
{"level":"info","ts":"2023-06-27T20:52:06.625Z","caller":"traceutil/trace.go:171","msg":"trace[1470367210] range","detail":"{range_begin:/registry/secrets/; range_end:/registry/secrets0; response_count:0; response_revision:491; }","duration":"2.6823362s","start":"2023-06-27T20:52:03.942Z","end":"2023-06-27T20:52:06.625Z","steps":["trace[1470367210] 'agreement among raft nodes before linearized reading'  (duration: 2.6818291s)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.625Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:03.942Z","time spent":"2.6825111s","remote":"127.0.0.1:42878","response type":"/etcdserverpb.KV/Range","request count":0,"request size":42,"response count":1,"response size":30,"request content":"key:\"/registry/secrets/\" range_end:\"/registry/secrets0\" count_only:true "}
{"level":"warn","ts":"2023-06-27T20:52:06.624Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"849.5484ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/minions/\" range_end:\"/registry/minions0\" ","response":"range_response_count:1 size:3786"}
{"level":"info","ts":"2023-06-27T20:52:06.625Z","caller":"traceutil/trace.go:171","msg":"trace[713171679] range","detail":"{range_begin:/registry/minions/; range_end:/registry/minions0; response_count:1; response_revision:491; }","duration":"850.8582ms","start":"2023-06-27T20:52:05.774Z","end":"2023-06-27T20:52:06.625Z","steps":["trace[713171679] 'agreement among raft nodes before linearized reading'  (duration: 849.5129ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.624Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"773.5383ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-06-27T20:52:06.626Z","caller":"traceutil/trace.go:171","msg":"trace[879945498] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:491; }","duration":"775.2023ms","start":"2023-06-27T20:52:05.850Z","end":"2023-06-27T20:52:06.626Z","steps":["trace[879945498] 'agreement among raft nodes before linearized reading'  (duration: 773.4969ms)"],"step_count":1}
{"level":"warn","ts":"2023-06-27T20:52:06.626Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:05.774Z","time spent":"851.1331ms","remote":"127.0.0.1:42890","response type":"/etcdserverpb.KV/Range","request count":0,"request size":40,"response count":1,"response size":3809,"request content":"key:\"/registry/minions/\" range_end:\"/registry/minions0\" "}
{"level":"warn","ts":"2023-06-27T20:52:06.626Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-06-27T20:52:05.850Z","time spent":"775.2764ms","remote":"127.0.0.1:42908","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":28,"request content":"key:\"/registry/health\" "}
==== END logs for container etcd of pod kube-system/etcd-kind-control-plane ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-md4hh ====
I0627 20:51:25.124527       1 main.go:316] probe TCP address kind-control-plane:6443
I0627 20:51:25.132855       1 main.go:102] connected to apiserver: https://kind-control-plane:6443
I0627 20:51:25.133207       1 main.go:107] hostIP = 172.18.0.2
podIP = 172.18.0.2
I0627 20:51:25.133907       1 main.go:116] setting mtu 1500 for CNI 
I0627 20:51:25.133951       1 main.go:146] kindnetd IP family: "ipv4"
I0627 20:51:25.134149       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I0627 20:51:25.621203       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:51:25.621283       1 main.go:227] handling current node
I0627 20:51:35.749616       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:51:35.749656       1 main.go:227] handling current node
I0627 20:51:45.757975       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:51:45.758038       1 main.go:227] handling current node
I0627 20:51:55.771426       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:51:55.771770       1 main.go:227] handling current node
I0627 20:52:06.628074       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:52:06.628202       1 main.go:227] handling current node
I0627 20:52:16.644369       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:52:16.644496       1 main.go:227] handling current node
I0627 20:52:26.663953       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:52:26.664198       1 main.go:227] handling current node
I0627 20:52:36.679028       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:52:36.679130       1 main.go:227] handling current node
I0627 20:52:46.713176       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:52:46.713485       1 main.go:227] handling current node
I0627 20:52:56.720657       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:52:56.720712       1 main.go:227] handling current node
I0627 20:53:06.727905       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0627 20:53:06.727945       1 main.go:227] handling current node
==== END logs for container kindnet-cni of pod kube-system/kindnet-md4hh ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-kind-control-plane ====
I0627 20:51:00.222672       1 server.go:553] external host was not specified, using 172.18.0.2
I0627 20:51:00.226447       1 server.go:166] Version: v1.27.3
I0627 20:51:00.226651       1 server.go:168] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0627 20:51:00.937023       1 shared_informer.go:311] Waiting for caches to sync for node_authorizer
I0627 20:51:00.978967       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0627 20:51:00.978996       1 plugins.go:161] Loaded 13 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,ClusterTrustBundleAttest,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
I0627 20:51:01.479387       1 handler.go:232] Adding GroupVersion apiextensions.k8s.io v1 to ResourceManager
W0627 20:51:01.479665       1 genericapiserver.go:752] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0627 20:51:01.481018       1 instance.go:282] Using reconciler: lease
I0627 20:51:01.927953       1 handler.go:232] Adding GroupVersion  v1 to ResourceManager
I0627 20:51:01.928331       1 instance.go:651] API group "internal.apiserver.k8s.io" is not enabled, skipping.
I0627 20:51:02.589673       1 instance.go:651] API group "resource.k8s.io" is not enabled, skipping.
I0627 20:51:02.629212       1 handler.go:232] Adding GroupVersion authentication.k8s.io v1 to ResourceManager
W0627 20:51:02.629288       1 genericapiserver.go:752] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.629324       1 genericapiserver.go:752] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.645910       1 handler.go:232] Adding GroupVersion authorization.k8s.io v1 to ResourceManager
W0627 20:51:02.646001       1 genericapiserver.go:752] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
I0627 20:51:02.661153       1 handler.go:232] Adding GroupVersion autoscaling v2 to ResourceManager
I0627 20:51:02.662550       1 handler.go:232] Adding GroupVersion autoscaling v1 to ResourceManager
W0627 20:51:02.662623       1 genericapiserver.go:752] Skipping API autoscaling/v2beta1 because it has no resources.
W0627 20:51:02.662632       1 genericapiserver.go:752] Skipping API autoscaling/v2beta2 because it has no resources.
I0627 20:51:02.679736       1 handler.go:232] Adding GroupVersion batch v1 to ResourceManager
W0627 20:51:02.679824       1 genericapiserver.go:752] Skipping API batch/v1beta1 because it has no resources.
I0627 20:51:02.687669       1 handler.go:232] Adding GroupVersion certificates.k8s.io v1 to ResourceManager
W0627 20:51:02.687757       1 genericapiserver.go:752] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.687768       1 genericapiserver.go:752] Skipping API certificates.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.693997       1 handler.go:232] Adding GroupVersion coordination.k8s.io v1 to ResourceManager
W0627 20:51:02.695271       1 genericapiserver.go:752] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.704893       1 genericapiserver.go:752] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
I0627 20:51:02.705896       1 handler.go:232] Adding GroupVersion discovery.k8s.io v1 to ResourceManager
I0627 20:51:02.712079       1 handler.go:232] Adding GroupVersion networking.k8s.io v1 to ResourceManager
W0627 20:51:02.712174       1 genericapiserver.go:752] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.712184       1 genericapiserver.go:752] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.725004       1 handler.go:232] Adding GroupVersion node.k8s.io v1 to ResourceManager
W0627 20:51:02.725098       1 genericapiserver.go:752] Skipping API node.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.725109       1 genericapiserver.go:752] Skipping API node.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.731057       1 handler.go:232] Adding GroupVersion policy v1 to ResourceManager
W0627 20:51:02.731108       1 genericapiserver.go:752] Skipping API policy/v1beta1 because it has no resources.
I0627 20:51:02.744824       1 handler.go:232] Adding GroupVersion rbac.authorization.k8s.io v1 to ResourceManager
W0627 20:51:02.744886       1 genericapiserver.go:752] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.744898       1 genericapiserver.go:752] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.748442       1 handler.go:232] Adding GroupVersion scheduling.k8s.io v1 to ResourceManager
W0627 20:51:02.748513       1 genericapiserver.go:752] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.748523       1 genericapiserver.go:752] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.759250       1 handler.go:232] Adding GroupVersion storage.k8s.io v1 to ResourceManager
W0627 20:51:02.759306       1 genericapiserver.go:752] Skipping API storage.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.759315       1 genericapiserver.go:752] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.763409       1 handler.go:232] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta3 to ResourceManager
I0627 20:51:02.764891       1 handler.go:232] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta2 to ResourceManager
W0627 20:51:02.764966       1 genericapiserver.go:752] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.764976       1 genericapiserver.go:752] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.782876       1 handler.go:232] Adding GroupVersion apps v1 to ResourceManager
W0627 20:51:02.783149       1 genericapiserver.go:752] Skipping API apps/v1beta2 because it has no resources.
W0627 20:51:02.783252       1 genericapiserver.go:752] Skipping API apps/v1beta1 because it has no resources.
I0627 20:51:02.815407       1 handler.go:232] Adding GroupVersion admissionregistration.k8s.io v1 to ResourceManager
W0627 20:51:02.815532       1 genericapiserver.go:752] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W0627 20:51:02.815550       1 genericapiserver.go:752] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
I0627 20:51:02.830217       1 handler.go:232] Adding GroupVersion events.k8s.io v1 to ResourceManager
W0627 20:51:02.830868       1 genericapiserver.go:752] Skipping API events.k8s.io/v1beta1 because it has no resources.
I0627 20:51:02.880685       1 handler.go:232] Adding GroupVersion apiregistration.k8s.io v1 to ResourceManager
W0627 20:51:02.880741       1 genericapiserver.go:752] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0627 20:51:03.945036       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0627 20:51:03.945049       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0627 20:51:03.945849       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I0627 20:51:03.946913       1 secure_serving.go:210] Serving securely on [::]:6443
I0627 20:51:03.947211       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0627 20:51:03.947845       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0627 20:51:03.947923       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I0627 20:51:03.948108       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0627 20:51:03.948128       1 apf_controller.go:361] Starting API Priority and Fairness config controller
I0627 20:51:03.948187       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0627 20:51:03.948203       1 available_controller.go:423] Starting AvailableConditionController
I0627 20:51:03.948208       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0627 20:51:03.948224       1 handler_discovery.go:392] Starting ResourceDiscoveryManager
I0627 20:51:03.948438       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0627 20:51:03.953582       1 aggregator.go:150] waiting for initial CRD sync...
I0627 20:51:03.953655       1 controller.go:83] Starting OpenAPI AggregationController
I0627 20:51:03.954035       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0627 20:51:03.954044       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0627 20:51:03.954746       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0627 20:51:03.955542       1 controller.go:85] Starting OpenAPI controller
I0627 20:51:03.955608       1 controller.go:85] Starting OpenAPI V3 controller
I0627 20:51:03.955633       1 naming_controller.go:291] Starting NamingConditionController
I0627 20:51:03.955648       1 establishing_controller.go:76] Starting EstablishingController
I0627 20:51:03.955663       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0627 20:51:03.955682       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0627 20:51:03.955695       1 crd_finalizer.go:266] Starting CRDFinalizer
I0627 20:51:03.960268       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0627 20:51:03.960279       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0627 20:51:03.960321       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0627 20:51:03.960419       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0627 20:51:03.960685       1 controller.go:121] Starting legacy_token_tracking_controller
I0627 20:51:03.960698       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0627 20:51:03.963960       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0627 20:51:03.969909       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0627 20:51:04.091201       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0627 20:51:04.091340       1 apf_controller.go:366] Running API Priority and Fairness config worker
I0627 20:51:04.091412       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I0627 20:51:04.091743       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0627 20:51:04.092001       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0627 20:51:04.092210       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0627 20:51:04.092809       1 aggregator.go:152] initial CRD sync complete...
I0627 20:51:04.092864       1 autoregister_controller.go:141] Starting autoregister controller
I0627 20:51:04.092897       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0627 20:51:04.093028       1 cache.go:39] Caches are synced for autoregister controller
I0627 20:51:04.120280       1 controller.go:624] quota admission added evaluator for: namespaces
I0627 20:51:04.138907       1 shared_informer.go:318] Caches are synced for node_authorizer
I0627 20:51:04.153262       1 shared_informer.go:318] Caches are synced for configmaps
E0627 20:51:04.211784       1 controller.go:146] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
E0627 20:51:04.227837       1 controller.go:150] while syncing ConfigMap "kube-system/kube-apiserver-legacy-service-account-token-tracking", err: namespaces "kube-system" not found
I0627 20:51:04.437569       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0627 20:51:04.561335       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0627 20:51:04.977152       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0627 20:51:05.049628       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0627 20:51:05.049689       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0627 20:51:07.380648       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0627 20:51:07.494307       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0627 20:51:07.670242       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0627 20:51:07.679832       1 lease.go:251] Resetting endpoints for master service "kubernetes" to [172.18.0.2]
I0627 20:51:07.681159       1 controller.go:624] quota admission added evaluator for: endpoints
I0627 20:51:07.693543       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0627 20:51:08.250353       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0627 20:51:09.464973       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0627 20:51:09.480626       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0627 20:51:09.494172       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0627 20:51:21.799399       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I0627 20:51:22.021929       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I0627 20:51:33.062033       1 trace.go:219] Trace[805249460]: "Update" accept:application/vnd.kubernetes.protobuf, */*,audit-id:e2a78704-4d0e-4ed8-b07d-b39cd29883d4,client:172.18.0.2,protocol:HTTP/2.0,resource:leases,scope:resource,url:/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler,user-agent:kube-scheduler/v1.27.3 (linux/amd64) kubernetes/25b4e43/leader-election,verb:PUT (27-Jun-2023 20:51:31.966) (total time: 1095ms):
Trace[805249460]: ["GuaranteedUpdate etcd3" audit-id:e2a78704-4d0e-4ed8-b07d-b39cd29883d4,key:/leases/kube-system/kube-scheduler,type:*coordination.Lease,resource:leases.coordination.k8s.io 1094ms (20:51:31.967)
Trace[805249460]:  ---"Txn call completed" 1093ms (20:51:33.061)]
Trace[805249460]: [1.0950084s] [1.0950084s] END
I0627 20:51:35.136373       1 trace.go:219] Trace[818673979]: "Get" accept:application/vnd.kubernetes.protobuf, */*,audit-id:d62a034d-f1f6-469a-b92c-7d137761964b,client:172.18.0.2,protocol:HTTP/2.0,resource:leases,scope:resource,url:/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager,user-agent:kube-controller-manager/v1.27.3 (linux/amd64) kubernetes/25b4e43/leader-election,verb:GET (27-Jun-2023 20:51:33.394) (total time: 1741ms):
Trace[818673979]: ---"About to write a response" 1741ms (20:51:35.136)
Trace[818673979]: [1.7418216s] [1.7418216s] END
I0627 20:51:59.787433       1 trace.go:219] Trace[915562775]: "Get" accept:application/vnd.kubernetes.protobuf, */*,audit-id:f06338d5-addb-4bde-a8c8-4a9e46ce6c93,client:172.18.0.2,protocol:HTTP/2.0,resource:leases,scope:resource,url:/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager,user-agent:kube-controller-manager/v1.27.3 (linux/amd64) kubernetes/25b4e43/leader-election,verb:GET (27-Jun-2023 20:51:58.712) (total time: 1074ms):
Trace[915562775]: ---"About to write a response" 1074ms (20:51:59.786)
Trace[915562775]: [1.0749903s] [1.0749903s] END
I0627 20:51:59.794853       1 trace.go:219] Trace[2122688261]: "Get" accept:application/vnd.kubernetes.protobuf, */*,audit-id:52727160-4207-469e-b94a-093a8a0e6cf8,client:172.18.0.2,protocol:HTTP/2.0,resource:leases,scope:resource,url:/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler,user-agent:kube-scheduler/v1.27.3 (linux/amd64) kubernetes/25b4e43/leader-election,verb:GET (27-Jun-2023 20:51:58.208) (total time: 1586ms):
Trace[2122688261]: ---"About to write a response" 1586ms (20:51:59.794)
Trace[2122688261]: [1.5866326s] [1.5866326s] END
E0627 20:52:04.797600       1 writers.go:122] apiserver was unable to write a JSON response: http: Handler timeout
E0627 20:52:04.797801       1 status.go:71] apiserver received an error that is not an metav1.Status: &errors.errorString{s:"http: Handler timeout"}: http: Handler timeout
E0627 20:52:04.798258       1 finisher.go:175] FinishRequest: post-timeout activity - time-elapsed: 326.1µs, panicked: false, err: context canceled, panic-reason: <nil>
E0627 20:52:04.801765       1 writers.go:135] apiserver was unable to write a fallback JSON response: http: Handler timeout
E0627 20:52:04.801817       1 writers.go:122] apiserver was unable to write a JSON response: http: Handler timeout
E0627 20:52:04.801906       1 finisher.go:175] FinishRequest: post-timeout activity - time-elapsed: 27.1µs, panicked: false, err: context canceled, panic-reason: <nil>
I0627 20:52:04.805201       1 trace.go:219] Trace[982543429]: "Update" accept:application/vnd.kubernetes.protobuf, */*,audit-id:2ac84b2c-4fb7-4d23-8eb4-e03b5b5b577d,client:172.18.0.2,protocol:HTTP/2.0,resource:leases,scope:resource,url:/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager,user-agent:kube-controller-manager/v1.27.3 (linux/amd64) kubernetes/25b4e43/leader-election,verb:PUT (27-Jun-2023 20:51:59.800) (total time: 5004ms):
Trace[982543429]: ["GuaranteedUpdate etcd3" audit-id:2ac84b2c-4fb7-4d23-8eb4-e03b5b5b577d,key:/leases/kube-system/kube-controller-manager,type:*coordination.Lease,resource:leases.coordination.k8s.io 5003ms (20:51:59.801)
Trace[982543429]:  ---"Txn call failed" err:context canceled 4993ms (20:52:04.797)]
Trace[982543429]: [5.0043681s] [5.0043681s] END
E0627 20:52:04.805868       1 timeout.go:142] post-timeout activity - time-elapsed: 8.2779ms, PUT "/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager" result: <nil>
E0627 20:52:04.806338       1 status.go:71] apiserver received an error that is not an metav1.Status: &errors.errorString{s:"http: Handler timeout"}: http: Handler timeout
E0627 20:52:04.808112       1 writers.go:135] apiserver was unable to write a fallback JSON response: http: Handler timeout
I0627 20:52:04.813545       1 trace.go:219] Trace[1901179281]: "Update" accept:application/vnd.kubernetes.protobuf, */*,audit-id:968991fd-61d3-4e1d-bba9-63c4db6ff563,client:172.18.0.2,protocol:HTTP/2.0,resource:leases,scope:resource,url:/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler,user-agent:kube-scheduler/v1.27.3 (linux/amd64) kubernetes/25b4e43/leader-election,verb:PUT (27-Jun-2023 20:51:59.803) (total time: 5010ms):
Trace[1901179281]: ["GuaranteedUpdate etcd3" audit-id:968991fd-61d3-4e1d-bba9-63c4db6ff563,key:/leases/kube-system/kube-scheduler,type:*coordination.Lease,resource:leases.coordination.k8s.io 5009ms (20:51:59.804)
Trace[1901179281]:  ---"Txn call failed" err:context canceled 4994ms (20:52:04.801)]
Trace[1901179281]: [5.0100575s] [5.0100575s] END
E0627 20:52:04.813971       1 timeout.go:142] post-timeout activity - time-elapsed: 11.4353ms, PUT "/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler" result: <nil>
I0627 20:52:06.478902       1 trace.go:219] Trace[1000211489]: "GuaranteedUpdate etcd3" audit-id:,key:/masterleases/172.18.0.2,type:*v1.Endpoints,resource:apiServerIPInfo (27-Jun-2023 20:51:57.660) (total time: 8817ms):
Trace[1000211489]: ---"Transaction prepared" 2116ms (20:51:59.780)
Trace[1000211489]: ---"Txn call completed" 6698ms (20:52:06.478)
Trace[1000211489]: [8.8179009s] [8.8179009s] END
I0627 20:52:06.624374       1 trace.go:219] Trace[166973931]: "Update" accept:application/vnd.kubernetes.protobuf,application/json,audit-id:e7f9f522-5736-4210-92fb-ef0099196268,client:172.18.0.2,protocol:HTTP/2.0,resource:leases,scope:resource,url:/apis/coordination.k8s.io/v1/namespaces/kube-node-lease/leases/kind-control-plane,user-agent:kubelet/v1.27.3 (linux/amd64) kubernetes/25b4e43,verb:PUT (27-Jun-2023 20:52:00.899) (total time: 5725ms):
Trace[166973931]: ["GuaranteedUpdate etcd3" audit-id:e7f9f522-5736-4210-92fb-ef0099196268,key:/leases/kube-node-lease/kind-control-plane,type:*coordination.Lease,resource:leases.coordination.k8s.io 5724ms (20:52:00.900)
Trace[166973931]:  ---"Txn call completed" 5719ms (20:52:06.624)]
Trace[166973931]: [5.7251424s] [5.7251424s] END
I0627 20:52:06.625263       1 trace.go:219] Trace[204341019]: "Create" accept:application/vnd.kubernetes.protobuf,application/json,audit-id:cd467dd9-a938-4de8-aded-6575c4b23c5c,client:172.18.0.2,protocol:HTTP/2.0,resource:events,scope:resource,url:/api/v1/namespaces/kube-system/events,user-agent:kubelet/v1.27.3 (linux/amd64) kubernetes/25b4e43,verb:POST (27-Jun-2023 20:52:01.811) (total time: 4813ms):
Trace[204341019]: ["Create etcd3" audit-id:cd467dd9-a938-4de8-aded-6575c4b23c5c,key:/events/kube-system/kube-apiserver-kind-control-plane.176c9f4ef3b25ccc,type:*core.Event,resource:events 4811ms (20:52:01.813)
Trace[204341019]:  ---"Txn call succeeded" 4811ms (20:52:06.625)]
Trace[204341019]: [4.8137437s] [4.8137437s] END
I0627 20:52:06.627314       1 trace.go:219] Trace[1125594172]: "List" accept:application/json, */*,audit-id:5629c620-5c0f-44b2-a397-a0de80eda4cd,client:172.18.0.2,protocol:HTTP/2.0,resource:nodes,scope:cluster,url:/api/v1/nodes,user-agent:kindnetd/v0.0.0 (linux/amd64) kubernetes/$Format,verb:LIST (27-Jun-2023 20:52:05.774) (total time: 852ms):
Trace[1125594172]: ["List(recursive=true) etcd3" audit-id:5629c620-5c0f-44b2-a397-a0de80eda4cd,key:/minions,resourceVersion:,resourceVersionMatch:,limit:0,continue: 852ms (20:52:05.774)]
Trace[1125594172]: [852.8467ms] [852.8467ms] END
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-kind-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-kind-control-plane ====
I0627 20:51:00.137783       1 serving.go:348] Generated self-signed cert in-memory
I0627 20:51:01.128934       1 controllermanager.go:187] "Starting" version="v1.27.3"
I0627 20:51:01.128982       1 controllermanager.go:189] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0627 20:51:01.130812       1 secure_serving.go:210] Serving securely on 127.0.0.1:10257
I0627 20:51:01.131080       1 leaderelection.go:245] attempting to acquire leader lease kube-system/kube-controller-manager...
I0627 20:51:01.131511       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0627 20:51:01.131615       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0627 20:51:01.131714       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
E0627 20:51:04.014905       1 leaderelection.go:327] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I0627 20:51:07.211562       1 leaderelection.go:255] successfully acquired lease kube-system/kube-controller-manager
I0627 20:51:07.212476       1 event.go:307] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="kind-control-plane_cbff6984-776a-460a-b811-7bebf7a6c5d8 became leader"
I0627 20:51:08.235786       1 shared_informer.go:311] Waiting for caches to sync for tokens
I0627 20:51:08.261006       1 controllermanager.go:638] "Started controller" controller="job"
I0627 20:51:08.261329       1 job_controller.go:202] Starting job controller
I0627 20:51:08.261349       1 shared_informer.go:311] Waiting for caches to sync for job
I0627 20:51:08.276164       1 controllermanager.go:638] "Started controller" controller="cronjob"
I0627 20:51:08.276474       1 cronjob_controllerv2.go:139] "Starting cronjob controller v2"
I0627 20:51:08.276531       1 shared_informer.go:311] Waiting for caches to sync for cronjob
I0627 20:51:08.293367       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-serving"
I0627 20:51:08.293491       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0627 20:51:08.293626       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0627 20:51:08.295136       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-client"
I0627 20:51:08.295179       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0627 20:51:08.295221       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0627 20:51:08.296778       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kube-apiserver-client"
I0627 20:51:08.296888       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0627 20:51:08.296813       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0627 20:51:08.298190       1 controllermanager.go:638] "Started controller" controller="csrsigning"
I0627 20:51:08.298300       1 certificate_controller.go:112] Starting certificate controller "csrsigning-legacy-unknown"
I0627 20:51:08.298394       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0627 20:51:08.301125       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0627 20:51:08.334927       1 controllermanager.go:638] "Started controller" controller="attachdetach"
I0627 20:51:08.335274       1 attach_detach_controller.go:343] "Starting attach detach controller"
I0627 20:51:08.335362       1 shared_informer.go:311] Waiting for caches to sync for attach detach
I0627 20:51:08.336947       1 shared_informer.go:318] Caches are synced for tokens
I0627 20:51:08.360291       1 controllermanager.go:638] "Started controller" controller="endpointslice"
I0627 20:51:08.360409       1 endpointslice_controller.go:252] Starting endpoint slice controller
I0627 20:51:08.360437       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice
I0627 20:51:08.398686       1 controllermanager.go:638] "Started controller" controller="namespace"
I0627 20:51:08.398878       1 namespace_controller.go:197] "Starting namespace controller"
I0627 20:51:08.398925       1 shared_informer.go:311] Waiting for caches to sync for namespace
I0627 20:51:08.408640       1 controllermanager.go:638] "Started controller" controller="csrcleaner"
I0627 20:51:08.408765       1 cleaner.go:82] Starting CSR cleaner controller
E0627 20:51:08.423473       1 core.go:213] "Failed to start cloud node lifecycle controller" err="no cloud provider provided"
I0627 20:51:08.423534       1 controllermanager.go:616] "Warning: skipping controller" controller="cloud-node-lifecycle"
I0627 20:51:08.444627       1 controllermanager.go:638] "Started controller" controller="pvc-protection"
I0627 20:51:08.444802       1 pvc_protection_controller.go:102] "Starting PVC protection controller"
I0627 20:51:08.444820       1 shared_informer.go:311] Waiting for caches to sync for PVC protection
I0627 20:51:08.500896       1 controllermanager.go:638] "Started controller" controller="horizontalpodautoscaling"
I0627 20:51:08.501104       1 horizontal.go:200] "Starting HPA controller"
I0627 20:51:08.504702       1 shared_informer.go:311] Waiting for caches to sync for HPA
I0627 20:51:08.542075       1 controllermanager.go:638] "Started controller" controller="ttl"
I0627 20:51:08.542228       1 core.go:228] "Warning: configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes."
I0627 20:51:08.542316       1 controllermanager.go:616] "Warning: skipping controller" controller="route"
I0627 20:51:08.542117       1 ttl_controller.go:124] "Starting TTL controller"
I0627 20:51:08.542393       1 shared_informer.go:311] Waiting for caches to sync for TTL
I0627 20:51:08.691840       1 controllermanager.go:638] "Started controller" controller="replicationcontroller"
I0627 20:51:08.691935       1 replica_set.go:201] "Starting controller" name="replicationcontroller"
I0627 20:51:08.691943       1 shared_informer.go:311] Waiting for caches to sync for ReplicationController
I0627 20:51:08.841278       1 controllermanager.go:638] "Started controller" controller="serviceaccount"
I0627 20:51:08.841364       1 serviceaccounts_controller.go:111] "Starting service account controller"
I0627 20:51:08.841373       1 shared_informer.go:311] Waiting for caches to sync for service account
I0627 20:51:09.015588       1 controllermanager.go:638] "Started controller" controller="bootstrapsigner"
I0627 20:51:09.015676       1 shared_informer.go:311] Waiting for caches to sync for bootstrap_signer
I0627 20:51:09.041958       1 node_lifecycle_controller.go:431] "Controller will reconcile labels"
I0627 20:51:09.042160       1 controllermanager.go:638] "Started controller" controller="nodelifecycle"
I0627 20:51:09.042329       1 node_lifecycle_controller.go:465] "Sending events to api server"
I0627 20:51:09.042405       1 node_lifecycle_controller.go:476] "Starting node controller"
I0627 20:51:09.042472       1 shared_informer.go:311] Waiting for caches to sync for taint
I0627 20:51:09.195676       1 controllermanager.go:638] "Started controller" controller="tokencleaner"
I0627 20:51:09.195744       1 tokencleaner.go:112] "Starting token cleaner controller"
I0627 20:51:09.195756       1 shared_informer.go:311] Waiting for caches to sync for token_cleaner
I0627 20:51:09.195767       1 shared_informer.go:318] Caches are synced for token_cleaner
I0627 20:51:19.293056       1 range_allocator.go:111] "No Secondary Service CIDR provided. Skipping filtering out secondary service addresses"
I0627 20:51:19.293239       1 controllermanager.go:638] "Started controller" controller="nodeipam"
I0627 20:51:19.293733       1 node_ipam_controller.go:162] "Starting ipam controller"
I0627 20:51:19.293766       1 shared_informer.go:311] Waiting for caches to sync for node
I0627 20:51:19.310613       1 controllermanager.go:638] "Started controller" controller="persistentvolume-binder"
I0627 20:51:19.310741       1 pv_controller_base.go:323] "Starting persistent volume controller"
I0627 20:51:19.310775       1 shared_informer.go:311] Waiting for caches to sync for persistent volume
I0627 20:51:19.323005       1 controllermanager.go:638] "Started controller" controller="podgc"
I0627 20:51:19.323235       1 gc_controller.go:103] Starting GC controller
I0627 20:51:19.323269       1 shared_informer.go:311] Waiting for caches to sync for GC
I0627 20:51:19.339918       1 garbagecollector.go:155] "Starting controller" controller="garbagecollector"
I0627 20:51:19.339952       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0627 20:51:19.339943       1 controllermanager.go:638] "Started controller" controller="garbagecollector"
I0627 20:51:19.340072       1 graph_builder.go:294] "Running" component="GraphBuilder"
I0627 20:51:19.354347       1 controllermanager.go:638] "Started controller" controller="disruption"
I0627 20:51:19.354554       1 disruption.go:423] Sending events to api server.
I0627 20:51:19.354662       1 disruption.go:434] Starting disruption controller
I0627 20:51:19.354727       1 shared_informer.go:311] Waiting for caches to sync for disruption
I0627 20:51:19.365149       1 controllermanager.go:638] "Started controller" controller="statefulset"
I0627 20:51:19.365352       1 stateful_set.go:161] "Starting stateful set controller"
I0627 20:51:19.365371       1 shared_informer.go:311] Waiting for caches to sync for stateful set
E0627 20:51:19.381282       1 core.go:92] "Failed to start service controller" err="WARNING: no cloud provider provided, services of type LoadBalancer will fail"
I0627 20:51:19.381340       1 controllermanager.go:616] "Warning: skipping controller" controller="service"
I0627 20:51:19.392606       1 controllermanager.go:638] "Started controller" controller="ttl-after-finished"
I0627 20:51:19.392735       1 ttlafterfinished_controller.go:109] "Starting TTL after finished controller"
I0627 20:51:19.392808       1 shared_informer.go:311] Waiting for caches to sync for TTL after finished
I0627 20:51:19.402693       1 controllermanager.go:638] "Started controller" controller="daemonset"
I0627 20:51:19.402793       1 daemon_controller.go:291] "Starting daemon sets controller"
I0627 20:51:19.403116       1 shared_informer.go:311] Waiting for caches to sync for daemon sets
I0627 20:51:19.455675       1 controllermanager.go:638] "Started controller" controller="deployment"
I0627 20:51:19.456000       1 deployment_controller.go:168] "Starting controller" controller="deployment"
I0627 20:51:19.456115       1 shared_informer.go:311] Waiting for caches to sync for deployment
I0627 20:51:19.606889       1 controllermanager.go:638] "Started controller" controller="replicaset"
I0627 20:51:19.607781       1 replica_set.go:201] "Starting controller" name="replicaset"
I0627 20:51:19.608022       1 shared_informer.go:311] Waiting for caches to sync for ReplicaSet
I0627 20:51:19.653189       1 controllermanager.go:638] "Started controller" controller="csrapproving"
I0627 20:51:19.653821       1 certificate_controller.go:112] Starting certificate controller "csrapproving"
I0627 20:51:19.653865       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrapproving
I0627 20:51:19.798581       1 controllermanager.go:638] "Started controller" controller="root-ca-cert-publisher"
I0627 20:51:19.798675       1 publisher.go:101] Starting root CA certificate configmap publisher
I0627 20:51:19.798686       1 shared_informer.go:311] Waiting for caches to sync for crt configmap
I0627 20:51:19.962343       1 controllermanager.go:638] "Started controller" controller="ephemeral-volume"
I0627 20:51:19.962459       1 controller.go:169] "Starting ephemeral volume controller"
I0627 20:51:19.962502       1 shared_informer.go:311] Waiting for caches to sync for ephemeral
I0627 20:51:20.097087       1 controllermanager.go:638] "Started controller" controller="endpoint"
I0627 20:51:20.097188       1 endpoints_controller.go:172] Starting endpoint controller
I0627 20:51:20.097205       1 shared_informer.go:311] Waiting for caches to sync for endpoint
I0627 20:51:20.256252       1 controllermanager.go:638] "Started controller" controller="endpointslicemirroring"
I0627 20:51:20.256793       1 endpointslicemirroring_controller.go:211] Starting EndpointSliceMirroring controller
I0627 20:51:20.256912       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice_mirroring
I0627 20:51:20.565837       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="endpoints"
W0627 20:51:20.565922       1 shared_informer.go:592] resyncPeriod 13h4m45.713802401s is smaller than resyncCheckPeriod 16h41m50.770323565s and the informer has already started. Changing it to 16h41m50.770323565s
W0627 20:51:20.566310       1 shared_informer.go:592] resyncPeriod 12h26m5.270574844s is smaller than resyncCheckPeriod 16h41m50.770323565s and the informer has already started. Changing it to 16h41m50.770323565s
I0627 20:51:20.566580       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="serviceaccounts"
I0627 20:51:20.566745       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="rolebindings.rbac.authorization.k8s.io"
I0627 20:51:20.566972       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="replicasets.apps"
I0627 20:51:20.567104       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="roles.rbac.authorization.k8s.io"
I0627 20:51:20.567263       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="ingresses.networking.k8s.io"
I0627 20:51:20.567410       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="poddisruptionbudgets.policy"
I0627 20:51:20.567498       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="horizontalpodautoscalers.autoscaling"
I0627 20:51:20.567594       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="deployments.apps"
I0627 20:51:20.567674       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="jobs.batch"
I0627 20:51:20.567718       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="limitranges"
I0627 20:51:20.567779       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="statefulsets.apps"
I0627 20:51:20.567898       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="cronjobs.batch"
I0627 20:51:20.567935       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="csistoragecapacities.storage.k8s.io"
I0627 20:51:20.567957       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="endpointslices.discovery.k8s.io"
I0627 20:51:20.568017       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="podtemplates"
I0627 20:51:20.568147       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="controllerrevisions.apps"
I0627 20:51:20.568192       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="networkpolicies.networking.k8s.io"
I0627 20:51:20.568266       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="leases.coordination.k8s.io"
I0627 20:51:20.568408       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="daemonsets.apps"
I0627 20:51:20.568475       1 controllermanager.go:638] "Started controller" controller="resourcequota"
I0627 20:51:20.569020       1 resource_quota_controller.go:295] "Starting resource quota controller"
I0627 20:51:20.569104       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0627 20:51:20.569166       1 resource_quota_monitor.go:304] "QuotaMonitor running"
I0627 20:51:20.702809       1 controllermanager.go:638] "Started controller" controller="persistentvolume-expander"
I0627 20:51:20.702907       1 expand_controller.go:339] "Starting expand controller"
I0627 20:51:20.702937       1 shared_informer.go:311] Waiting for caches to sync for expand
I0627 20:51:20.848295       1 controllermanager.go:638] "Started controller" controller="clusterrole-aggregation"
I0627 20:51:20.848430       1 clusterroleaggregation_controller.go:189] "Starting ClusterRoleAggregator controller"
I0627 20:51:20.848453       1 shared_informer.go:311] Waiting for caches to sync for ClusterRoleAggregator
I0627 20:51:21.012409       1 controllermanager.go:638] "Started controller" controller="pv-protection"
I0627 20:51:21.012943       1 pv_protection_controller.go:78] "Starting PV protection controller"
I0627 20:51:21.013107       1 shared_informer.go:311] Waiting for caches to sync for PV protection
I0627 20:51:21.039164       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0627 20:51:21.046012       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"kind-control-plane\" does not exist"
I0627 20:51:21.048645       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0627 20:51:21.054578       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0627 20:51:21.057189       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0627 20:51:21.061372       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0627 20:51:21.062576       1 shared_informer.go:318] Caches are synced for ephemeral
I0627 20:51:21.063731       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0627 20:51:21.066103       1 shared_informer.go:318] Caches are synced for stateful set
I0627 20:51:21.092304       1 shared_informer.go:318] Caches are synced for ReplicationController
I0627 20:51:21.093946       1 shared_informer.go:318] Caches are synced for node
I0627 20:51:21.093985       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0627 20:51:21.095187       1 range_allocator.go:174] "Sending events to api server"
I0627 20:51:21.095310       1 range_allocator.go:178] "Starting range CIDR allocator"
I0627 20:51:21.095360       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0627 20:51:21.095373       1 shared_informer.go:318] Caches are synced for cidrallocator
I0627 20:51:21.095760       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0627 20:51:21.097149       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0627 20:51:21.097299       1 shared_informer.go:318] Caches are synced for endpoint
I0627 20:51:21.099603       1 shared_informer.go:318] Caches are synced for crt configmap
I0627 20:51:21.101837       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0627 20:51:21.101918       1 shared_informer.go:318] Caches are synced for namespace
I0627 20:51:21.103615       1 shared_informer.go:318] Caches are synced for daemon sets
I0627 20:51:21.103878       1 shared_informer.go:318] Caches are synced for expand
I0627 20:51:21.106193       1 range_allocator.go:380] "Set node PodCIDR" node="kind-control-plane" podCIDRs=[10.244.0.0/24]
I0627 20:51:21.106270       1 shared_informer.go:318] Caches are synced for HPA
I0627 20:51:21.108631       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0627 20:51:21.111112       1 shared_informer.go:318] Caches are synced for persistent volume
I0627 20:51:21.113741       1 shared_informer.go:318] Caches are synced for PV protection
I0627 20:51:21.116118       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0627 20:51:21.124391       1 shared_informer.go:318] Caches are synced for GC
I0627 20:51:21.136117       1 shared_informer.go:318] Caches are synced for attach detach
I0627 20:51:21.141480       1 shared_informer.go:318] Caches are synced for service account
I0627 20:51:21.143514       1 shared_informer.go:318] Caches are synced for taint
I0627 20:51:21.143523       1 shared_informer.go:318] Caches are synced for TTL
I0627 20:51:21.143778       1 node_lifecycle_controller.go:1223] "Initializing eviction metric for zone" zone=""
I0627 20:51:21.143925       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="kind-control-plane"
I0627 20:51:21.143972       1 node_lifecycle_controller.go:1027] "Controller detected that all Nodes are not-Ready. Entering master disruption mode"
I0627 20:51:21.144042       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0627 20:51:21.144107       1 taint_manager.go:211] "Sending events to api server"
I0627 20:51:21.145260       1 shared_informer.go:318] Caches are synced for PVC protection
I0627 20:51:21.145260       1 event.go:307] "Event occurred" object="kind-control-plane" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node kind-control-plane event: Registered Node kind-control-plane in Controller"
I0627 20:51:21.155129       1 shared_informer.go:318] Caches are synced for disruption
I0627 20:51:21.156897       1 shared_informer.go:318] Caches are synced for deployment
I0627 20:51:21.161565       1 shared_informer.go:318] Caches are synced for job
I0627 20:51:21.164739       1 event.go:307] "Event occurred" object="kube-system/kube-scheduler-kind-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0627 20:51:21.164938       1 event.go:307] "Event occurred" object="kube-system/kube-apiserver-kind-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0627 20:51:21.165101       1 event.go:307] "Event occurred" object="kube-system/etcd-kind-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0627 20:51:21.165745       1 event.go:307] "Event occurred" object="kube-system/kube-controller-manager-kind-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0627 20:51:21.182187       1 shared_informer.go:318] Caches are synced for cronjob
I0627 20:51:21.195022       1 shared_informer.go:318] Caches are synced for TTL after finished
I0627 20:51:21.240394       1 shared_informer.go:318] Caches are synced for resource quota
I0627 20:51:21.269300       1 shared_informer.go:318] Caches are synced for resource quota
I0627 20:51:21.640480       1 shared_informer.go:318] Caches are synced for garbage collector
I0627 20:51:21.640619       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0627 20:51:21.664371       1 shared_informer.go:318] Caches are synced for garbage collector
I0627 20:51:21.813327       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-4fhqn"
I0627 20:51:21.819691       1 event.go:307] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-md4hh"
I0627 20:51:22.032912       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5d78c9869d to 2"
I0627 20:51:22.040133       1 event.go:307] "Event occurred" object="local-path-storage/local-path-provisioner" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set local-path-provisioner-6bc4bddd6b to 1"
I0627 20:51:22.139823       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-qzsrc"
I0627 20:51:22.146258       1 event.go:307] "Event occurred" object="local-path-storage/local-path-provisioner-6bc4bddd6b" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: local-path-provisioner-6bc4bddd6b-9jmg8"
I0627 20:51:22.153537       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-2rmlv"
I0627 20:51:26.145195       1 node_lifecycle_controller.go:1046] "Controller detected that some Nodes are Ready. Exiting master disruption mode"
E0627 20:52:04.796500       1 leaderelection.go:364] Failed to update lock: Put "https://172.18.0.2:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-kind-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-4fhqn ====
I0627 20:51:23.222795       1 node.go:141] Successfully retrieved node IP: 172.18.0.2
I0627 20:51:23.222917       1 server_others.go:110] "Detected node IP" address="172.18.0.2"
I0627 20:51:23.247852       1 server_others.go:192] "Using iptables Proxier"
I0627 20:51:23.247890       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0627 20:51:23.247901       1 server_others.go:200] "Creating dualStackProxier for iptables"
I0627 20:51:23.247918       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I0627 20:51:23.247955       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0627 20:51:23.248668       1 server.go:658] "Version info" version="v1.27.3"
I0627 20:51:23.248688       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0627 20:51:23.249160       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0627 20:51:23.250151       1 config.go:315] "Starting node config controller"
I0627 20:51:23.250171       1 shared_informer.go:311] Waiting for caches to sync for node config
I0627 20:51:23.250492       1 config.go:188] "Starting service config controller"
I0627 20:51:23.250504       1 shared_informer.go:311] Waiting for caches to sync for service config
I0627 20:51:23.250539       1 config.go:97] "Starting endpoint slice config controller"
I0627 20:51:23.250547       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0627 20:51:23.350774       1 shared_informer.go:318] Caches are synced for endpoint slice config
I0627 20:51:23.350805       1 shared_informer.go:318] Caches are synced for node config
I0627 20:51:23.350829       1 shared_informer.go:318] Caches are synced for service config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-4fhqn ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-kind-control-plane ====
I0627 20:51:00.975085       1 serving.go:348] Generated self-signed cert in-memory
W0627 20:51:04.037509       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0627 20:51:04.037679       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0627 20:51:04.037740       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0627 20:51:04.037791       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0627 20:51:04.107467       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.27.3"
I0627 20:51:04.107697       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0627 20:51:04.111124       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0627 20:51:04.111224       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0627 20:51:04.111243       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0627 20:51:04.111261       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0627 20:51:04.146584       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0627 20:51:04.159622       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0627 20:51:04.146830       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0627 20:51:04.160008       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0627 20:51:04.146970       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:04.162451       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0627 20:51:04.147020       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0627 20:51:04.163065       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0627 20:51:04.147121       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:04.163365       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0627 20:51:04.147170       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0627 20:51:04.163588       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0627 20:51:04.147226       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0627 20:51:04.163648       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0627 20:51:04.147462       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0627 20:51:04.163673       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0627 20:51:04.147515       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:04.163701       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0627 20:51:04.147585       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0627 20:51:04.163721       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0627 20:51:04.147647       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0627 20:51:04.163740       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0627 20:51:04.147695       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:04.163762       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0627 20:51:04.147741       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0627 20:51:04.163782       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0627 20:51:04.147794       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0627 20:51:04.163995       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0627 20:51:04.159584       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0627 20:51:04.164176       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0627 20:51:05.012805       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:05.012971       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0627 20:51:05.027774       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:05.027913       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0627 20:51:05.027780       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0627 20:51:05.027962       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0627 20:51:05.052338       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0627 20:51:05.052500       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0627 20:51:05.124510       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0627 20:51:05.124575       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0627 20:51:05.271228       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:05.271310       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0627 20:51:05.291642       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:05.291715       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0627 20:51:05.412191       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0627 20:51:05.412257       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0627 20:51:05.488931       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0627 20:51:05.489050       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0627 20:51:05.534764       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0627 20:51:05.534834       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0627 20:51:05.541228       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0627 20:51:05.541290       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0627 20:51:05.556809       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0627 20:51:05.556885       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0627 20:51:05.609485       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0627 20:51:05.609588       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0627 20:51:05.691495       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0627 20:51:05.691638       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0627 20:51:05.738202       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0627 20:51:05.738246       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0627 20:51:06.841810       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0627 20:51:06.841873       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0627 20:51:06.978685       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0627 20:51:06.979012       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
I0627 20:51:08.811615       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0627 20:51:11.714987       1 leaderelection.go:245] attempting to acquire leader lease kube-system/kube-scheduler...
I0627 20:51:11.726599       1 leaderelection.go:255] successfully acquired lease kube-system/kube-scheduler
E0627 20:52:04.799768       1 leaderelection.go:364] Failed to update lock: Put "https://172.18.0.2:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler?timeout=5s": context deadline exceeded
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-kind-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "kind-control-plane.176c9f42c80e0064",
                "namespace": "default",
                "uid": "5574d088-4fd9-49cd-9b44-1eea624b9e8d",
                "resourceVersion": "246",
                "creationTimestamp": "2023-06-27T20:51:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kind-control-plane",
                "uid": "kind-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:09Z",
            "lastTimestamp": "2023-06-27T20:51:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kind-control-plane.176c9f42cfe9e618",
                "namespace": "default",
                "uid": "61ab1900-5de8-4ce2-89d7-f7c0a3d8b683",
                "resourceVersion": "248",
                "creationTimestamp": "2023-06-27T20:51:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kind-control-plane",
                "uid": "kind-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node kind-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:09Z",
            "lastTimestamp": "2023-06-27T20:51:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kind-control-plane.176c9f42cfe9fb30",
                "namespace": "default",
                "uid": "ac453857-6184-49a2-b593-49d7ff9245c7",
                "resourceVersion": "249",
                "creationTimestamp": "2023-06-27T20:51:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kind-control-plane",
                "uid": "kind-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node kind-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:09Z",
            "lastTimestamp": "2023-06-27T20:51:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kind-control-plane.176c9f42cfea0814",
                "namespace": "default",
                "uid": "99a37eb6-7d42-4d95-8bbe-00fb439b42bc",
                "resourceVersion": "250",
                "creationTimestamp": "2023-06-27T20:51:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kind-control-plane",
                "uid": "kind-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node kind-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:09Z",
            "lastTimestamp": "2023-06-27T20:51:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kind-control-plane.176c9f42d7907e7c",
                "namespace": "default",
                "uid": "465a8189-f616-48f6-94ef-e4c483e0708c",
                "resourceVersion": "252",
                "creationTimestamp": "2023-06-27T20:51:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kind-control-plane",
                "uid": "kind-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:09Z",
            "lastTimestamp": "2023-06-27T20:51:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kind-control-plane.176c9f457c463b08",
                "namespace": "default",
                "uid": "8b1d876c-1c7d-4b0d-ba27-211548c0aa68",
                "resourceVersion": "319",
                "creationTimestamp": "2023-06-27T20:51:21Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kind-control-plane",
                "uid": "f2514a52-aa5b-4d24-bf77-c3d49690da72",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node kind-control-plane event: Registered Node kind-control-plane in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-27T20:51:21Z",
            "lastTimestamp": "2023-06-27T20:51:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kind-control-plane.176c9f45f9c7a5e4",
                "namespace": "default",
                "uid": "bed78581-ec78-470e-bb1c-308ff0ba0caf",
                "resourceVersion": "397",
                "creationTimestamp": "2023-06-27T20:51:23Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kind-control-plane",
                "uid": "kind-control-plane"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-06-27T20:51:23.249260Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-kind-control-plane"
        },
        {
            "metadata": {
                "name": "kind-control-plane.176c9f468f5d6a94",
                "namespace": "default",
                "uid": "3bfa40c4-1c49-4fe0-a063-3a00d697b587",
                "resourceVersion": "406",
                "creationTimestamp": "2023-06-27T20:51:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kind-control-plane",
                "uid": "kind-control-plane"
            },
            "reason": "NodeReady",
            "message": "Node kind-control-plane status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "kind-control-plane"
            },
            "firstTimestamp": "2023-06-27T20:51:25Z",
            "lastTimestamp": "2023-06-27T20:51:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "001c3f8c-82ff-4f2d-b8c8-01ecd60ff3db",
                "resourceVersion": "197",
                "creationTimestamp": "2023-06-27T20:51:07Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "583"
    },
    "items": []
}
